{"version":3,"sources":["vendor/ember-cli/app-prefix.js","linda-vis-fe/adapters/application.js","linda-vis-fe/app.js","linda-vis-fe/components/data-table.js","linda-vis-fe/components/draggable-item.js","linda-vis-fe/components/droppable-area.js","linda-vis-fe/components/property-item.js","linda-vis-fe/components/tree-selection.js","linda-vis-fe/controllers/datasource.js","linda-vis-fe/controllers/index.js","linda-vis-fe/controllers/visconfiguration.js","linda-vis-fe/controllers/visualization.js","linda-vis-fe/initializers/app-version.js","linda-vis-fe/initializers/export-application-global.js","linda-vis-fe/models/dataselection.js","linda-vis-fe/models/datasource.js","linda-vis-fe/models/visualization.js","linda-vis-fe/router.js","linda-vis-fe/routes/application.js","linda-vis-fe/routes/dataselection.js","linda-vis-fe/routes/datasource.js","linda-vis-fe/routes/saved-visualizations.js","linda-vis-fe/routes/visualization.js","linda-vis-fe/templates/application.js","linda-vis-fe/templates/components/draggable-item.js","linda-vis-fe/templates/components/droppable-area.js","linda-vis-fe/templates/components/property-item.js","linda-vis-fe/templates/configure.js","linda-vis-fe/templates/datasource.js","linda-vis-fe/templates/dimension-area.js","linda-vis-fe/templates/export-visualization.js","linda-vis-fe/templates/index.js","linda-vis-fe/templates/properties-list.js","linda-vis-fe/templates/publish-visualization.js","linda-vis-fe/templates/save-visualization.js","linda-vis-fe/templates/saved-visualizations.js","linda-vis-fe/templates/select-field.js","linda-vis-fe/templates/slide-show.js","linda-vis-fe/templates/text-field.js","linda-vis-fe/templates/tuning-check.js","linda-vis-fe/templates/tuning-input.js","linda-vis-fe/templates/tuning-numinput.js","linda-vis-fe/templates/visualization.js","linda-vis-fe/tests/adapters/application.jshint.js","linda-vis-fe/tests/app.jshint.js","linda-vis-fe/tests/components/data-table.jshint.js","linda-vis-fe/tests/components/draggable-item.jshint.js","linda-vis-fe/tests/components/droppable-area.jshint.js","linda-vis-fe/tests/components/property-item.jshint.js","linda-vis-fe/tests/components/tree-selection.jshint.js","linda-vis-fe/tests/controllers/datasource.jshint.js","linda-vis-fe/tests/controllers/index.jshint.js","linda-vis-fe/tests/controllers/visconfiguration.jshint.js","linda-vis-fe/tests/controllers/visualization.jshint.js","linda-vis-fe/tests/helpers/resolver.js","linda-vis-fe/tests/helpers/resolver.jshint.js","linda-vis-fe/tests/helpers/start-app.js","linda-vis-fe/tests/helpers/start-app.jshint.js","linda-vis-fe/tests/models/dataselection.jshint.js","linda-vis-fe/tests/models/datasource.jshint.js","linda-vis-fe/tests/models/visualization.jshint.js","linda-vis-fe/tests/router.jshint.js","linda-vis-fe/tests/routes/application.jshint.js","linda-vis-fe/tests/routes/dataselection.jshint.js","linda-vis-fe/tests/routes/datasource.jshint.js","linda-vis-fe/tests/routes/saved-visualizations.jshint.js","linda-vis-fe/tests/routes/visualization.jshint.js","linda-vis-fe/tests/test-helper.js","linda-vis-fe/tests/test-helper.jshint.js","linda-vis-fe/tests/utils/area-chart.jshint.js","linda-vis-fe/tests/utils/bubble-chart.jshint.js","linda-vis-fe/tests/utils/column-chart.jshint.js","linda-vis-fe/tests/utils/csv-data-module.jshint.js","linda-vis-fe/tests/utils/export-visualization.jshint.js","linda-vis-fe/tests/utils/line-chart.jshint.js","linda-vis-fe/tests/utils/map.jshint.js","linda-vis-fe/tests/utils/pie-chart.jshint.js","linda-vis-fe/tests/utils/scatter-chart.jshint.js","linda-vis-fe/tests/utils/sparql-data-module.jshint.js","linda-vis-fe/tests/utils/table-data-module.jshint.js","linda-vis-fe/tests/utils/template-mapping.jshint.js","linda-vis-fe/tests/utils/tree-selection-data-module.jshint.js","linda-vis-fe/tests/utils/util.jshint.js","linda-vis-fe/tests/utils/visualization-registry.jshint.js","linda-vis-fe/tests/views/draw-visualization.jshint.js","linda-vis-fe/tests/views/properties-list.jshint.js","linda-vis-fe/tests/views/slide-show.jshint.js","linda-vis-fe/tests/views/visualization-options.jshint.js","linda-vis-fe/utils/area-chart.js","linda-vis-fe/utils/bubble-chart.js","linda-vis-fe/utils/column-chart.js","linda-vis-fe/utils/csv-data-module.js","linda-vis-fe/utils/export-visualization.js","linda-vis-fe/utils/line-chart.js","linda-vis-fe/utils/map.js","linda-vis-fe/utils/pie-chart.js","linda-vis-fe/utils/scatter-chart.js","linda-vis-fe/utils/sparql-data-module.js","linda-vis-fe/utils/table-data-module.js","linda-vis-fe/utils/template-mapping.js","linda-vis-fe/utils/tree-selection-data-module.js","linda-vis-fe/utils/util.js","linda-vis-fe/utils/visualization-registry.js","linda-vis-fe/views/draw-visualization.js","linda-vis-fe/views/properties-list.js","linda-vis-fe/views/slide-show.js","linda-vis-fe/views/visualization-options.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('linda-vis-fe/adapters/application', ['exports', 'ember-data'], function (exports, DS) {\n\n        'use strict';\n\n        var Adapter = DS['default'].RESTAdapter.extend({\n                host: 'http://' + window.location.hostname + ':3002'\n        });\n\n        exports['default'] = Adapter;\n\n});","define('linda-vis-fe/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'linda-vis-fe/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('linda-vis-fe/components/data-table', ['exports', 'ember', 'linda-vis-fe/utils/table-data-module'], function (exports, Ember, table_data_module) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        tagName: \"table\",\n        list: [],\n        columns: [],\n        classNames: [\"no-wrap\"],\n        table: null,\n        setContent: (function () {\n            console.log(\"TABLE COMPONENT - GENERATING PREVIEW\");\n\n            var self = this;\n            var selection = this.get(\"preview\");\n            var datasource = this.get(\"datasource\");\n\n            if (selection.length > 0) {\n                var columns = table_data_module['default'].getColumns(selection, datasource);\n\n                table_data_module['default'].getContent(selection, datasource).then(function (content) {\n\n                    if (self.get(\"table\")) {\n                        self.get(\"table\").api().clear().destroy();\n                        self.$().empty();\n                    }\n\n                    var table = self.$().dataTable({\n                        responsive: {\n                            details: {\n                                type: \"inline\"\n                            }\n                        },\n                        \"data\": content.slice(1),\n                        \"columns\": columns\n                    });\n                    self.set(\"table\", table);\n                });\n            } else {\n                if (self.get(\"table\")) {\n                    self.get(\"table\").api().clear().destroy();\n                    self.$().empty();\n                }\n            }\n        }).observes(\"preview.[]\").on(\"didInsertElement\")\n    });\n\n});","define('linda-vis-fe/components/draggable-item', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        tagName: 'span',\n        classNames: ['draggable-item'],\n        attributeBindings: ['draggable'],\n        draggable: 'true',\n        dragStart: function dragStart(event) {\n            event.stopPropagation();\n            var data = this.get('data');\n            var jsonData = JSON.stringify(data);\n            event.dataTransfer.setData('text/plain', jsonData);\n            event.dataTransfer.effectAllowed = 'copy';\n        }\n    });\n\n});","define('linda-vis-fe/components/droppable-area', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        dragOver: function dragOver(event) {\n            event.stopPropagation();\n            event.preventDefault();\n        },\n        drop: function drop(event) {\n            event.stopPropagation();\n            event.preventDefault();\n            var droppableJSON = event.dataTransfer.getData('text/plain');\n            console.log('DROPPED: ' + droppableJSON);\n\n            var droppable;\n            try {\n                droppable = JSON.parse(droppableJSON);\n            } catch (error) {\n                console.log(error);\n                return;\n            }\n\n            var inArea = this.get('inArea');\n\n            if (this.isFull()) {\n                return;\n            }\n\n            for (var i = 0; i < inArea.length; i++) {\n                var existingJSON = JSON.stringify(inArea[i]);\n                if (existingJSON === droppableJSON) {\n                    return;\n                }\n            }\n            inArea.pushObject(droppable);\n        },\n        classNames: ['droppable-area'],\n        classNameBindings: ['full', 'active'],\n        active: false,\n        isFull: function isFull() {\n            return false;\n        },\n        full: (function () {\n            return this.isFull();\n        }).property('maxNumItems', 'inArea.@each'),\n        dragEnter: function dragEnter(event) {\n            console.log(event.type);\n            this.set('active', true);\n        },\n        deactivate: (function (event) {\n            console.log(event.type);\n            this.set('active', false);\n        }).on('dragLeave', 'dragStop', 'drop')\n    });\n\n});","define('linda-vis-fe/components/property-item', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    actions: {\n      remove: function remove() {\n        var collection = this.get('collection');\n        var item = this.get('item');\n        collection.removeObject(item);\n      }\n    }\n  });\n\n});","define('linda-vis-fe/components/tree-selection', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        tagName: \"div\",\n        tree: null,\n        setContent: (function () {\n            console.log(\"TREE SELECTION COMPONENT - CREATING SELECTION TREE\");\n            var content = this.get(\"treedata\");\n            var selection = this.get(\"selection\");\n            console.dir(JSON.stringify(selection));\n\n            //selection = []; todo needs to be reset\n            this.set(\"selection\", selection);\n\n            var self = this;\n\n            this.$(this.get(\"element\")).fancytree({\n                extensions: [\"filter\", \"glyph\", \"edit\", \"wide\"],\n                source: content,\n                checkbox: true,\n                icons: false,\n                selectMode: 3,\n                glyph: {\n                    map: {\n                        checkbox: \"glyphicon glyphicon-unchecked\",\n                        checkboxSelected: \"glyphicon glyphicon-check\",\n                        checkboxUnknown: \"glyphicon glyphicon-share\",\n                        error: \"glyphicon glyphicon-warning-sign\",\n                        expanderClosed: \"glyphicon glyphicon-plus-sign\",\n                        expanderLazy: \"glyphicon glyphicon-plus-sign\",\n                        expanderOpen: \"glyphicon glyphicon-minus-sign\",\n                        loading: \"glyphicon glyphicon-refresh\"\n                    }\n                },\n                wide: {\n                    iconWidth: \"0.3em\",\n                    iconSpacing: \"0.5em\",\n                    levelOfs: \"1.5em\"\n                },\n                filter: {\n                    mode: \"dimm\",\n                    autoApply: true\n                },\n                lazyLoad: function lazyLoad(event, data) {\n                    console.log(\"TREE SELECTION COMPONENT - LOADING CHILDREN\");\n                    console.log(\"DATA\");\n                    console.dir(data);\n                    var node = data.node;\n                    var node_path = self.getNodePath(node);\n\n                    data.result = data.node.data._children.loadChildren(node_path.slice().reverse());\n                },\n                select: function select(event, data) {\n                    console.log(\"TREE SELECTION COMPONENT - GENERATING PREVIEWS\");\n                    var tree = data.tree;\n                    var node = data.node;\n                    var branch_root = self.getBranchRoot(node);\n                    var branch_root_title = branch_root.title;\n                    var selected = tree.getSelectedNodes();\n\n                    if (node.selected) {\n                        tree.filterBranches(function (node) {\n                            if (node.title === branch_root_title) {\n                                return true;\n                            } else {\n                                node.hideCheckbox = true;\n                                node.render(true);\n                            }\n                        });\n\n                        for (var i = 0; i < selected.length; i++) {\n                            var node_ = selected[i];\n                            var node_path = self.getNodePath(node_).slice().reverse();\n                            var path_labels = self.getNodePath(node_).slice().reverse();\n                            var node_label = node_.title;\n                            var node_key = node_.key;\n                            var node_type = node_.data.type;\n                            var node_role = node_.data.role;\n                            var node_datatype = node_.data.datatype;\n\n                            var already_selected = _.some(selection, function (value) {\n                                return _.isEqual(value.parent, node_path);\n                            });\n\n                            if (!already_selected && node_.hideCheckbox === false && node_type !== \"Class\") {\n\n                                selection.pushObject({\n                                    label: node_label,\n                                    key: node_key,\n                                    type: node_type,\n                                    role: node_role,\n                                    parent: path_labels,\n                                    datatype: node_datatype\n                                });\n                            }\n                        }\n                    } else {\n\n                        selection = _.filter(selection, function (item) {\n\n                            var is_selected = false;\n\n                            for (var i = 0; i < selected.length; i++) {\n                                var node_ = selected[i];\n                                var node_path = self.getNodePath(node_).slice().reverse();\n\n                                if (!is_selected) {\n                                    is_selected = _.isEqual(item.parent, node_path);\n                                }\n                            }\n\n                            return is_selected;\n                        });\n\n                        if (selected.length === 0) {\n                            tree.clearFilter();\n                            tree.visit(function (node) {\n                                var type = node.data.type;\n                                node.hideCheckbox = self.hideCheckbox(type);\n                                node.render(true);\n                            });\n                        }\n                    }\n\n                    self.set(\"selection\", selection);\n                }\n            });\n        }).observes(\"treedata\").on(\"didInsertElement\"),\n        getNodePath: function getNodePath(node) {\n            var node_path_with_labels = [];\n            node_path_with_labels.push({ id: node.key, label: node.title });\n\n            while (node.parent !== null) {\n                node_path_with_labels.push({ id: node.parent.key, label: node.parent.title });\n                node = node.parent;\n            }\n\n            node_path_with_labels.pop();\n\n            return node_path_with_labels;\n        },\n        getBranchRoot: function getBranchRoot(node) {\n            while (node.parent.title !== \"root\") {\n                node = node.parent;\n            }\n            return node;\n        },\n        hideCheckbox: function hideCheckbox(type) {\n            switch (type) {\n                case \"Ratio\":\n                case \"Interval\":\n                case \"Nominal\":\n                case \"Angular\":\n                case \"Geographic Latitude\":\n                case \"Geographic Longitude\":\n                case \"Class\":\n                    return false;\n                case \"Resource\":\n                case \"Nothing\":\n                    return true;\n            }\n            console.error(\"Unknown category: '\" + type + \"'\");\n            return null;\n        }\n    });\n\n});","define('linda-vis-fe/controllers/datasource', ['exports', 'ember', 'linda-vis-fe/utils/tree-selection-data-module'], function (exports, Ember, treeselection_data) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        isToggled: true,\n        treeContent: (function () {\n            console.log(\"DATASOURCE CONTROLLER\");\n            var dataInfo = this.get(\"model\"); // data sources\n            if (!dataInfo) {\n                return {};\n            }\n\n            this.set(\"selectedDatasource\", dataInfo);\n\n            var previousSelection = this.get(\"previousSelection\");\n            if (previousSelection.length === 0) {\n                return treeselection_data['default'].initialize(dataInfo);\n            } else {\n                return treeselection_data['default'].restore(dataInfo, previousSelection);\n            }\n        }).property(\"model\", \"previousSelection\"),\n        previousSelection: [],\n        dataSelection: [],\n        selectedDatasource: null,\n        resetSelection: (function () {\n            this.get(\"dataSelection\").length = 0;\n        }).observes(\"model\"),\n        actions: {\n            visualize: function visualize() {\n                var self = this;\n                var selection = this.get(\"dataSelection\");\n                var datasource = this.get(\"selectedDatasource\");\n                var selected = treeselection_data['default'].getDataSelection(selection, datasource);\n                var dataselection = this.store.createRecord(\"dataselection\", selected);\n                console.log(\"VISUALIZE\");\n                dataselection.save().then(function (responseDataselection) {\n                    console.log(\"SAVED DATA SELECTION. TRANSITION TO VISUALIZATION ROUTE .....\");\n                    console.dir(responseDataselection);\n                    self.transitionToRoute(\"visualization\", \"dataselection\", responseDataselection.id);\n                });\n            },\n            toggle: function toggle() {\n                var toggled = this.get(\"isToggled\");\n                if (toggled) {\n                    this.set(\"isToggled\", false);\n                } else {\n                    this.set(\"isToggled\", true);\n                }\n            }\n        }\n    });\n\n});","define('linda-vis-fe/controllers/index', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend({\n        needs: ['application'],\n        datasetsEndpointURI: (function () {\n            return encodeURIComponent(this.get('controllers.application.datasetsEndpoint'));\n        }).property()\n    });\n\n});","define('linda-vis-fe/controllers/visconfiguration', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].ArrayController.extend({});\n\n});","define('linda-vis-fe/controllers/visualization', ['exports', 'ember', 'linda-vis-fe/utils/template-mapping', 'linda-vis-fe/utils/visualization-registry'], function (exports, Ember, template_mapping, vis_registry) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ArrayController.extend({\n        isToggled: true,\n        layoutOptions: {},\n        structureOptions: {},\n        slideShowContainer: Ember['default'].ContainerView.create(),\n        datasource: Ember['default'].computed.alias(\"selectedVisualization.datasource\"),\n        visualizationConfiguration: [{}],\n        visualizationSVG: \"\",\n        exportFormats: [\"SVG\", \"PNG\"],\n        selectedFormat: \"PNG\",\n        configName: \"\",\n        categorizedProperties: (function () {\n            var categorizedProperties = {};\n            var selectedVisualization = this.get(\"selectedVisualization\");\n            var dataselection = selectedVisualization.get(\"dataselection\");\n            var propertyInfos = dataselection.get(\"propertyInfos\");\n\n            for (var i = 0; i < propertyInfos.length; i++) {\n                var propertyInfo = propertyInfos[i];\n                var category = propertyInfo.type;\n                var datatype = propertyInfo.datatype;\n\n                if (!categorizedProperties[category]) {\n                    categorizedProperties[category] = {\n                        name: category,\n                        datatype: datatype,\n                        items: []\n                    };\n                }\n                categorizedProperties[category].items.push(propertyInfo);\n            }\n\n            console.log(\"CATEGORIZED PROPERTIES\");\n            console.dir(_.values(categorizedProperties));\n\n            return _.values(categorizedProperties);\n        }).property(\"selectedVisualization\"),\n        initializeVisualization: (function () {\n            console.log(\"VISUALIZATION CONTROLLER - INITIALIZE VISUALIZATION ... \");\n            this.set(\"drawnVisualization\", null);\n            this.set(\"isToggled\", true);\n\n            var selectedVisualization = this.get(\"selectedVisualization\");\n            console.log(\"SELECTED VISUALIZATION\");\n            console.dir(selectedVisualization);\n\n            // Reset configuration map\n            var configArray = [{}];\n            this.set(\"visualizationConfiguration\", configArray);\n\n            if (!selectedVisualization) {\n                return;\n            }\n\n            var mapping = {\n                structureOptions: {},\n                layoutOptions: {}\n            };\n\n            var customMapping = template_mapping['default'].templateMapping(selectedVisualization);\n\n            mapping.structureOptions = customMapping.structureOptions;\n            mapping.layoutOptions = customMapping.layoutOptions;\n\n            console.log(\"MAPPING - STRUCTURE OPTIONS\");\n            console.dir(mapping.structureOptions);\n\n            console.log(\"MAPPING - LAYOUT OPTIONS\");\n            console.dir(mapping.layoutOptions);\n\n            this.set(\"structureOptions\", mapping.structureOptions);\n            this.set(\"layoutOptions\", mapping.layoutOptions);\n\n            // Ensures that bindings on drawnVisualizations are triggered only now\n            this.set(\"drawnVisualization\", selectedVisualization);\n        }).observes(\"selectedVisualization\"),\n        setSuggestedVisualization: (function () {\n            var topSuggestion = this.get(\"firstObject\");\n            this.set(\"selectedVisualization\", topSuggestion);\n        }).observes(\"model.[]\"),\n        actions: {\n            exportPNG: function exportPNG() {\n                var visualization = vis_registry['default'].getVisualization(this.get(\"selectedVisualization\").get(\"name\"));\n                visualization.export_as_PNG().then(function (pngURL) {\n                    window.open(pngURL);\n                });\n            },\n            exportSVG: function exportSVG() {\n                var visualization = vis_registry['default'].getVisualization(this.get(\"selectedVisualization\").get(\"name\"));\n                var svgURL = visualization.export_as_SVG();\n                window.open(svgURL);\n            },\n            \"export\": function _export() {\n                var visualization = vis_registry['default'].getVisualization(this.get(\"selectedVisualization\").get(\"visualizationName\"));\n                if (this.get(\"selectedFormat\") === \"PNG\") {\n                    visualization.export_as_PNG().then(function (pngURL) {\n                        window.open(pngURL);\n                    });\n                } else {\n                    var svgURL = visualization.export_as_SVG();\n                    window.open(svgURL);\n                }\n            },\n            publish: function publish() {\n                var visualization = vis_registry['default'].getVisualization(this.get(\"selectedVisualization\").get(\"visualizationName\"));\n                this.set(\"visualizationSVG\", visualization.get_SVG());\n            },\n            save: function save() {\n                console.log(\"SAVE VISUALIZATION\");\n                // send actual visualization model to backend\n                var selectedVisualization = this.get(\"selectedVisualization\");\n                console.dir(selectedVisualization);\n\n                var configurationName = this.get(\"configName\");\n\n                // send current visualization configuration to backend\n                console.log(\"The value is \" + selectedVisualization.get(\"configurationName\"));\n                selectedVisualization.set(\"configurationName\", configurationName);\n\n                selectedVisualization.save().then(function () {\n                    console.log(\"SAVED SUCCESSFULLY\");\n                }, function (response) {\n                    if (response && response.status === 200) {\n                        console.log(\"SAVED SUCCESSFULLY (but Ember didn't understand)\");\n                    } else {\n                        console.log(\"ERROR DURING SAVING\");\n                        console.log(response);\n                    }\n                });\n            },\n            chooseVisualization: function chooseVisualization(visualization) {\n                this.set(\"selectedVisualization\", visualization);\n            },\n            select: function select() {\n                console.log(\"CHANGE DATASELECTION\");\n                var selectedVisualization = this.get(\"selectedVisualization\");\n                var dataselectionID = selectedVisualization.get(\"dataselection\").id;\n                var datasourceID = selectedVisualization.get(\"dataselection.datasource\").id;\n\n                this.transitionToRoute(\"dataselection\", dataselectionID, datasourceID);\n            },\n            toggle: function toggle() {\n                var toggled = this.get(\"isToggled\");\n                var controller = this;\n                Ember['default'].run(function () {\n                    if (toggled) {\n                        controller.set(\"isToggled\", false);\n                    } else {\n                        controller.set(\"isToggled\", true);\n                    }\n                });\n            }\n        }\n    });\n\n});","define('linda-vis-fe/initializers/app-version', ['exports', 'linda-vis-fe/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('linda-vis-fe/initializers/export-application-global', ['exports', 'ember', 'linda-vis-fe/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('linda-vis-fe/models/dataselection', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        datasource: DS['default'].attr(),\n        propertyInfos: DS['default'].attr()\n    });\n\n});","define('linda-vis-fe/models/datasource', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        name: DS['default'].attr(\"string\"),\n        location: DS['default'].attr(\"string\"),\n        graph: DS['default'].attr(\"string\"),\n        format: DS['default'].attr(\"string\")\n    });\n\n});","define('linda-vis-fe/models/visualization', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    /*The visualization model represents the  initial visualization configuration retrieved from the backend. \n     *And describes the format used for storing the current visualization configuration in the backend.*/\n    exports['default'] = DS['default'].Model.extend({\n        visualizationName: DS['default'].attr('string'),\n        configurationName: DS['default'].attr('string'),\n        structureOptions: DS['default'].attr(),\n        layoutOptions: DS['default'].attr(),\n        visualizationThumbnail: DS['default'].attr('string'),\n        valid: DS['default'].attr('boolean'),\n        dataselection: DS['default'].belongsTo('dataselection')\n    });\n\n});","define('linda-vis-fe/router', ['exports', 'ember', 'linda-vis-fe/config/environment'], function (exports, Ember, config) {\n\n    'use strict';\n\n    var Router = Ember['default'].Router.extend({\n        location: config['default'].locationType\n    });\n\n    Router.map(function () {\n        this.route('visualization', {\n            path: '/visualization/:source_type/:id'\n        });\n        this.route('datasource', {\n            path: '/datasource/:name/:location/:graph/:format'\n        });\n        this.route('dataselection', {\n            path: '/dataselection/:selection/:datasource'\n        });\n        this.route('saved-visualizations');\n        this.route('configure');\n    });\n\n    exports['default'] = Router;\n\n});","define('linda-vis-fe/routes/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return $.getJSON(\"config.json\");\n    }\n  });\n\n});","define('linda-vis-fe/routes/dataselection', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var DataselectionRoute = Ember['default'].Route.extend({\n        model: function model(params) {\n            console.log('DATASELECTION ROUTE', params.selection);\n            return Ember['default'].$.getJSON('http://' + window.location.hostname + ':3002/dataselections/' + params.selection);\n        },\n        controllerName: 'datasource',\n        setupController: function setupController(controller, model) {\n            console.log('DATASELECTION ROUTE - SETTING UP THE DATASOURCE CONTROLLER');\n            console.log('MODEL');\n            console.dir(model);\n\n            controller.set('model', model.dataselection.datasource);\n\n            var dataSelection = controller.get('dataSelection');\n            var selection = _.flatten(dataSelection.pushObject(model.dataselection.propertyInfos));\n\n            controller.set('dataSelection', selection);\n            controller.set('previousSelection', selection);\n        },\n        renderTemplate: function renderTemplate() {\n            this.render('datasource');\n        }\n    });\n\n    exports['default'] = DataselectionRoute;\n\n});","define('linda-vis-fe/routes/datasource', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var DatasourceRoute = Ember['default'].Route.extend({\n        model: function model(params) {\n            var ds = this.store.createRecord(\"datasource\", {\n                name: decodeURIComponent(params.name),\n                location: decodeURIComponent(params.location),\n                graph: decodeURIComponent(params.graph),\n                format: decodeURIComponent(params.format)\n            });\n            return ds.save().then(function (data) {\n                return data._data;\n            });\n        }\n    });\n\n    exports['default'] = DatasourceRoute;\n\n});","define('linda-vis-fe/routes/saved-visualizations', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var SavedvisualizationsRoute = Ember['default'].Route.extend({\n        // \"params\" contains the parameters for the visualization route. \n        // The parameters are specified in the router.js.\n        // The backend needs the datasource id only for the suggestion algorithm.\n        model: function model(params) {\n            console.log(\"LOAD VISUALIZATION VISUALIZATIONS\");\n            console.dir(params);\n            return this.store.find(\"visualization\", { source_type: \"visualizationConfiguration\" }).then(function (visualizations) {\n                console.log(\"STORED VISUALIZATIONS\");\n                console.dir(visualizations);\n                return visualizations;\n            });\n        }\n    });\n\n    exports['default'] = SavedvisualizationsRoute;\n\n});","define('linda-vis-fe/routes/visualization', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var VisualizationRoute = Ember['default'].Route.extend({\n        // \"params\" contains the parameters for the visualization route. \n        // The parameters are specified in the router.js.\n        // The backend needs the datasource id only for the suggestion algorithm.\n        model: function model(params) {\n            console.log(\"Requesting visualization model and recommendations from the backend for {\" + params.source_type + \", \" + params.id + \"}\");\n            console.dir(params);\n            return this.store.find(\"visualization\", { source_type: params.source_type, id: params.id }).then(function (visualizations) {\n                console.log(\"Visualizations:\");\n                console.dir(visualizations);\n                return visualizations;\n            });\n        }\n    });\n\n    exports['default'] = VisualizationRoute;\n\n});","define('linda-vis-fe/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          dom.setAttribute(el1,\"class\",\"navbar-brand\");\n          dom.setAttribute(el1,\"href\",\"#\");\n          var el2 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"img\");\n          dom.setAttribute(el2,\"src\",\"logo.png\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"span\");\n          var el3 = dom.createTextNode(\" LinDaViz\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1,\"type\",\"button\");\n          dom.setAttribute(el1,\"class\",\"btn btn-default navbar-btn\");\n          var el2 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"span\");\n          dom.setAttribute(el2,\"class\",\"glyphicon glyphicon-open-file\");\n          dom.setAttribute(el2,\"aria-hidden\",\"true\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"container\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"id\",\"header\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"nav\");\n        dom.setAttribute(el3,\"class\",\"navbar navbar-default\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"container-fluid\");\n        var el5 = dom.createTextNode(\" \\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"div\");\n        dom.setAttribute(el5,\"class\",\"navbar-header\");\n        var el6 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"div\");\n        dom.setAttribute(el5,\"class\",\"collapse navbar-collapse\");\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"div\");\n        dom.setAttribute(el6,\"class\",\"btn-group pull-right\");\n        dom.setAttribute(el6,\"role\",\"group\");\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"button\");\n        dom.setAttribute(el7,\"type\",\"button\");\n        dom.setAttribute(el7,\"class\",\"btn btn-default navbar-btn\");\n        var el8 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createElement(\"span\");\n        dom.setAttribute(el8,\"class\",\"glyphicon glyphicon-cog\");\n        dom.setAttribute(el8,\"aria-hidden\",\"true\");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"                    \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n\\n                \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"               \\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1, 1, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element1, [1]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element1, [3, 1]),3,3);\n        var morph2 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n        block(env, morph0, context, \"link-to\", [\"index\"], {\"animations\": \"main:fade\"}, child0, null);\n        block(env, morph1, context, \"link-to\", [\"saved-visualizations\"], {}, child1, null);\n        inline(env, morph2, context, \"outlet\", [], {\"animationSequence\": \"async\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/components/draggable-item', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/components/droppable-area', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/components/property-item', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"area-item-label\");\n        var el2 = dom.createTextNode(\"\\n     \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        var el3 = dom.createTextNode(\"      \\n       \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"a\");\n        dom.setAttribute(el3,\"class\",\"area-item-remove\");\n        var el4 = dom.createTextNode(\" X \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" \\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, content = hooks.content, get = hooks.get;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0, 1]);\n        var element1 = dom.childAt(element0, [3]);\n        var morph0 = dom.createMorphAt(element0,1,1);\n        element(env, element0, context, \"bind-attr\", [], {\"class\": \"item.datatype\"});\n        content(env, morph0, context, \"item.label\");\n        element(env, element1, context, \"action\", [\"remove\", get(env, context, \"item\")], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/configure', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row box\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"large-12 medium-12 columns\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"inner_box dsdefault\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"inner_title_box\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"h7\");\n        var el6 = dom.createTextNode(\"Configuration\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        var el5 = dom.createTextNode(\"\\n                Here you will be able to change user settings\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"                                                            \\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"                                         \\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"  \");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/datasource', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"glyphicon glyphicon-resize-full\");\n          dom.setAttribute(el1,\"aria-hidden\",\"true\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" \\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"glyphicon glyphicon-resize-small\");\n          dom.setAttribute(el1,\"aria-hidden\",\"true\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" \\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        dom.setAttribute(el1,\"id\",\"ds_container\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\" Data Selection \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"panel panel-default\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"panel-heading\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"h1\");\n        dom.setAttribute(el5,\"class\",\"panel-title pull-left\");\n        var el6 = dom.createTextNode(\"Explore and Select Data\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"panel-body\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"  \\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"panel-footer clearfix\");\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"                                                      \\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"           \\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\" Data Selection Preview \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"panel panel-default\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"panel-heading\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"h1\");\n        dom.setAttribute(el5,\"class\",\"panel-title pull-left\");\n        var el6 = dom.createTextNode(\"Preview Data Selection\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"type\",\"button\");\n        dom.setAttribute(el5,\"class\",\"btn btn-default btn-xs pull-right\");\n        var el6 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"                \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"panel-body\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\" \\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"panel-footer clearfix\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"type\",\"button\");\n        dom.setAttribute(el5,\"class\",\"btn btn-default pull-right\");\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"span\");\n        dom.setAttribute(el6,\"class\",\"glyphicon glyphicon-stats\");\n        dom.setAttribute(el6,\"aria-hidden\",\"true\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"   Visualize\\n                \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"     \\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element0, [3]);\n        var element3 = dom.childAt(element2, [3]);\n        var element4 = dom.childAt(element3, [1, 3]);\n        var element5 = dom.childAt(element3, [5, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element1, [3, 3]),1,1);\n        var morph1 = dom.createMorphAt(element4,1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(element3, [3]),1,1);\n        element(env, element1, context, \"bind-attr\", [], {\"class\": \"isToggled:col-md-5:col-md-0\"});\n        inline(env, morph0, context, \"tree-selection\", [], {\"treedata\": get(env, context, \"controller.treeContent\"), \"selection\": get(env, context, \"controller.dataSelection\")});\n        element(env, element2, context, \"bind-attr\", [], {\"class\": \"isToggled:col-md-7:col-md-12\"});\n        element(env, element4, context, \"action\", [\"toggle\"], {});\n        block(env, morph1, context, \"if\", [get(env, context, \"isToggled\")], {}, child0, child1);\n        inline(env, morph2, context, \"data-table\", [], {\"preview\": get(env, context, \"controller.dataSelection\"), \"datasource\": get(env, context, \"controller.selectedDatasource\")});\n        element(env, element5, context, \"action\", [\"visualize\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/dimension-area', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            content(env, morph0, context, \"type\");\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"any data \");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"property-item\", [], {\"item\": get(env, context, \"areaItem\"), \"collection\": get(env, context, \"view.content\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"dim-name\");\n          var el2 = dom.createTextNode(\"\\n           \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" \\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"dim-area-box\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"dim-metadata\");\n          var el3 = dom.createTextNode(\"\\n           Drag \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"here\\n        \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"dim-area-item\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"        \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [3]);\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          var morph1 = dom.createMorphAt(dom.childAt(element0, [1]),1,1);\n          var morph2 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n          content(env, morph0, context, \"view.label\");\n          block(env, morph1, context, \"each\", [get(env, context, \"view.metadata\")], {\"keyword\": \"type\"}, child0, child1);\n          block(env, morph2, context, \"each\", [get(env, context, \"view.content\")], {\"keyword\": \"areaItem\"}, child2, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"area-box\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        block(env, morph0, context, \"droppable-area\", [], {\"inArea\": get(env, context, \"view.content\"), \"metadata\": get(env, context, \"view.metadata\"), \"label\": get(env, context, \"view.label\"), \"maxNumItems\": get(env, context, \"view.maxCardinality\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/export-visualization', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"consumption-title\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        var el4 = dom.createTextNode(\" Export as \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" \\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"type\",\"button\");\n        dom.setAttribute(el3,\"class\",\"btn btn-default btn-xs\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"glyphicon glyphicon-export\");\n        dom.setAttribute(el4,\"aria-hidden\",\"true\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"  Export\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"  \\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0, 1]);\n        var element1 = dom.childAt(element0, [5]);\n        var morph0 = dom.createMorphAt(element0,3,3);\n        inline(env, morph0, context, \"view\", [\"Ember.Select\"], {\"content\": get(env, context, \"controller.exportFormats\"), \"value\": get(env, context, \"controller.selectedFormat\"), \"class\": \"btn btn-default dropdown-toggle\"});\n        element(env, element1, context, \"action\", [\"export\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            1. DepartmentOfAgriculture-Quick Stats (RDF format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            2. DepartmentOfDefense-Marital Status (RDF format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            3. DepartmentofHealthandHumanServices-OMH Claims Listed by State (RDF format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            4. DepartmentOfTheInterior-Wildland Fires 1960-2008 (RDF format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child4 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            5. DepartmentOfState-Africa Conflicts Without Borders 2009 (RDF format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child5 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            6. DepartmentOfTheTreasury-Quarterly Report on Bank Derivatives Activities (RDF format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child6 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            7. DepartmentOfVeteransAffairs-Veterans Health Administration 2008 (RDF format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child7 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            8. GeneralServicesAdministration- Cash and Payments Management Data (RDF format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child8 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n            9. NationalScienceFoundation- NSF Research Grant Funding Rates (RDF format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child9 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            10. NationalTransportationSafetyBoardAviation- Fatal Accident Statistics 2008 (RDF format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child10 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            11. OfficeOfPersonnelManagement-Fiscal Year 2007 Employee Survivor Annuitants (RDF format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child11 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            12. SecurityAndExchangeCommission- Public Company Bankruptcy Cases 2009 (RDF format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child12 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            13. GDP per Capita Example (temporal/statistical dataset; RDF (data cube) format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child13 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            14. Healthcare Example (geographical/statistical dataset; RDF (basic geo) format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child14 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            15. Water Quality Example (statistical dataset; RDF format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child15 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            16. Newspaper Articles Example (statistical dataset; RDF format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child16 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            17. Health Data.gov - Hospital Inpatient Discharges by Facility (statistical dataset; RDF format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child17 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            18. TS1 (statistical dataset; RDF format)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"box\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h4\");\n        var el3 = dom.createTextNode(\"Example Datasets:\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n         \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0, 3]);\n        var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(element0, [5]),1,1);\n        var morph3 = dom.createMorphAt(dom.childAt(element0, [7]),1,1);\n        var morph4 = dom.createMorphAt(dom.childAt(element0, [9]),1,1);\n        var morph5 = dom.createMorphAt(dom.childAt(element0, [11]),1,1);\n        var morph6 = dom.createMorphAt(dom.childAt(element0, [13]),1,1);\n        var morph7 = dom.createMorphAt(dom.childAt(element0, [15]),1,1);\n        var morph8 = dom.createMorphAt(dom.childAt(element0, [17]),1,1);\n        var morph9 = dom.createMorphAt(dom.childAt(element0, [19]),1,1);\n        var morph10 = dom.createMorphAt(dom.childAt(element0, [21]),1,1);\n        var morph11 = dom.createMorphAt(dom.childAt(element0, [23]),1,1);\n        var morph12 = dom.createMorphAt(dom.childAt(element0, [25]),1,1);\n        var morph13 = dom.createMorphAt(dom.childAt(element0, [27]),1,1);\n        var morph14 = dom.createMorphAt(dom.childAt(element0, [29]),1,1);\n        var morph15 = dom.createMorphAt(dom.childAt(element0, [31]),1,1);\n        var morph16 = dom.createMorphAt(dom.childAt(element0, [33]),1,1);\n        var morph17 = dom.createMorphAt(dom.childAt(element0, [35]),1,1);\n        block(env, morph0, context, \"link-to\", [\"datasource\", \"DepartmentOfAgriculture-Quick%20Stats\", get(env, context, \"datasetsEndpointURI\"), \"http%3A%2F%2Fwww.linda-project.org%2Fexamples%2FDepartmentOfAgriculture-QuickStats.nt\", \"rdf\"], {}, child0, null);\n        block(env, morph1, context, \"link-to\", [\"datasource\", \"DepartmentOfDefense-Marital%20Status\", get(env, context, \"datasetsEndpointURI\"), \"http%3A%2F%2Fwww.linda-project.org%2Fexamples%2FDepartmentOfDefense-MaritalStatus.nt\", \"rdf\"], {}, child1, null);\n        block(env, morph2, context, \"link-to\", [\"datasource\", \"DepartmentofHealthandHumanServices-OMHClaims%20Listed%20by%20State\", get(env, context, \"datasetsEndpointURI\"), \"http%3A%2F%2Fwww.linda-project.org%2Fexamples%2FDepartmentofHealthandHumanServices-OMHClaimsListedbyState.nt\", \"rdf\"], {}, child2, null);\n        block(env, morph3, context, \"link-to\", [\"datasource\", \"DepartmentOfTheInterior-Wildl%20and%20Fires%20and%201960-2008\", get(env, context, \"datasetsEndpointURI\"), \"http%3A%2F%2Fwww.linda-project.org%2Fexamples%2FDepartmentOfTheInterior-WildlandFiresand1960-2008.nt\", \"rdf\"], {}, child3, null);\n        block(env, morph4, context, \"link-to\", [\"datasource\", \"DepartmentofState-Africa%20Conflicts%20Without%20Borders%202009\", get(env, context, \"datasetsEndpointURI\"), \"http%3A%2F%2Fwww.linda-project.org%2Fexamples%2FDepartmentofState-AfricaConflictsWithoutBorders2009.nt\", \"rdf\"], {}, child4, null);\n        block(env, morph5, context, \"link-to\", [\"datasource\", \"DepartmentOfTheTreasury-Quarterly%20Report%20on%20Bank%20Derivatives%20Activities\", get(env, context, \"datasetsEndpointURI\"), \"http%3A%2F%2Fwww.linda-project.org%2Fexamples%2FDepartmentOfTheTreasury-QuarterlyReportonBankDerivativesActivities.nt\", \"rdf\"], {}, child5, null);\n        block(env, morph6, context, \"link-to\", [\"datasource\", \"DepartmentOfVeteransAffairs-Veterans%20Health%20Administration%202008\", get(env, context, \"datasetsEndpointURI\"), \"http%3A%2F%2Fwww.linda-project.org%2Fexamples%2FDepartmentOfVeteransAffairs-VeteransHealthAdministration2008.nt\", \"rdf\"], {}, child6, null);\n        block(env, morph7, context, \"link-to\", [\"datasource\", \"GeneralServicesAdministration-Cash%20and%20Payments%20Management%20Data\", get(env, context, \"datasetsEndpointURI\"), \"http%3A%2F%2Fwww.linda-project.org%2Fexamples%2FGeneralServicesAdministration-CashandPaymentsManagementData.nt\", \"rdf\"], {}, child7, null);\n        block(env, morph8, context, \"link-to\", [\"datasource\", \"NationalScienceFoundation-NSF%20Research%20Grant%20Funding%20Rates\", get(env, context, \"datasetsEndpointURI\"), \"http%3A%2F%2Fwww.linda-project.org%2Fexamples%2FNationalScienceFoundation-NSFResearchGrantFundingRates.nt\", \"rdf\"], {}, child8, null);\n        block(env, morph9, context, \"link-to\", [\"datasource\", \"NationalTransportationSafetyBoardAviation-Accident%20Statistics%202008\", get(env, context, \"datasetsEndpointURI\"), \"http%3A%2F%2Fwww.linda-project.org%2Fexamples%2FNationalTransportationSafetyBoardAviation-AccidentStatistics2008.nt\", \"rdf\"], {}, child9, null);\n        block(env, morph10, context, \"link-to\", [\"datasource\", \"OfficeofPersonnelManagement-Fiscal%20Year%202007%20Employee%20Survivor%20Annuitants\", get(env, context, \"datasetsEndpointURI\"), \"http%3A%2F%2Fwww.linda-project.org%2Fexamples%2FOfficeofPersonnelManagement-FiscalYear2007EmployeeSurvivorAnnuitants.nt\", \"rdf\"], {}, child10, null);\n        block(env, morph11, context, \"link-to\", [\"datasource\", \"SecurityAndExchangeCommission-Public%20Company%20Bankruptcy%20Cases%202009\", get(env, context, \"datasetsEndpointURI\"), \"http%3A%2F%2Fwww.linda-project.org%2Fexamples%2FSecurityAndExchangeCommission-PublicCompanyBankruptcyCases2009.nt\", \"rdf\"], {}, child11, null);\n        block(env, morph12, context, \"link-to\", [\"datasource\", \"World%20Bank%20GDP%20per%20capita\", get(env, context, \"datasetsEndpointURI\"), \"http%3A%2F%2Fwww.linda-project.org%2Fexamples%2Fworldbank-slice-5000\", \"rdf\"], {}, child12, null);\n        block(env, morph13, context, \"link-to\", [\"datasource\", \"Healthcare%20Analysis\", get(env, context, \"datasetsEndpointURI\"), \"http%3A%2F%2Fwww.hospitals_reviewer.com%2F2014\", \"rdf\"], {}, child13, null);\n        block(env, morph14, context, \"link-to\", [\"datasource\", \"Water%20Quality%20Analysis\", get(env, context, \"datasetsEndpointURI\"), \"http%3A%2F%2Fwater_quality_check.it%2Finfo\", \"rdf\"], {}, child14, null);\n        block(env, morph15, context, \"link-to\", [\"datasource\", \"Newspaper%20Articles%20Analysis\", get(env, context, \"datasetsEndpointURI\"), \"http%3A%2F%2Fnewspaper.org%2Farticles_2007\", \"rdf\"], {}, child15, null);\n        block(env, morph16, context, \"link-to\", [\"datasource\", \"Health Data.gov - Hospital Inpatient Discharges by Facility\", get(env, context, \"datasetsEndpointURI\"), \"http%3A%2F%2FHealthData.govHospitalInpatientDischargesbyFacility\", \"rdf\"], {}, child16, null);\n        block(env, morph17, context, \"link-to\", [\"datasource\", \"TS1\", get(env, context, \"datasetsEndpointURI\"), \"http%3A//www.linda-project.org/TS1_LinearRegression_Result_Original\", \"rdf\"], {}, child17, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/properties-list', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          var child0 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"                        \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"span\");\n                dom.setAttribute(el1,\"class\",\"categorized-property-parent\");\n                var el2 = dom.createComment(\"\");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createTextNode(\" »\");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, content = hooks.content;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n                content(env, morph0, context, \"p.label\");\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                   \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"div\");\n              var el2 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"div\");\n              dom.setAttribute(el2,\"class\",\"categorized-property-parents\");\n              var el3 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createComment(\"\");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createTextNode(\"                    \");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"div\");\n              dom.setAttribute(el2,\"class\",\"categorized-property-name\");\n              var el3 = dom.createTextNode(\"\\n                        \");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createComment(\"\");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                  \");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\" \\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, element = hooks.element, get = hooks.get, block = hooks.block, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var element0 = dom.childAt(fragment, [1]);\n              var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),1,1);\n              var morph1 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n              element(env, element0, context, \"bind-attr\", [], {\"class\": \"item.datatype\"});\n              block(env, morph0, context, \"each\", [get(env, context, \"item.parent\")], {\"keyword\": \"p\"}, child0, null);\n              content(env, morph1, context, \"item.label\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"draggable-item\", [], {\"data\": get(env, context, \"item\"), \"tagName\": \"li\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createTextNode(\"\\n       \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"ul\");\n          dom.setAttribute(el2,\"class\",\"categorized-property\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"        \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" \\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element, content = hooks.content, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [1]);\n          var element2 = dom.childAt(element1, [1]);\n          var morph0 = dom.createMorphAt(element2,1,1);\n          var morph1 = dom.createMorphAt(dom.childAt(element1, [3]),1,1);\n          element(env, element2, context, \"bind-attr\", [], {\"class\": \"category.name\"});\n          content(env, morph0, context, \"category.datatype\");\n          block(env, morph1, context, \"each\", [get(env, context, \"category.items\")], {\"keyword\": \"item\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"each\", [get(env, context, \"view.categories\")], {\"keyword\": \"category\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/publish-visualization', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"consumption\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"consumption-title\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"a\");\n        var el4 = dom.createElement(\"h7\");\n        var el5 = dom.createTextNode(\" Embed Chart into Website \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1, 1]);\n        var morph0 = dom.createMorphAt(element0,3,3);\n        element(env, element1, context, \"action\", [\"publish\"], {});\n        inline(env, morph0, context, \"textarea\", [], {\"value\": get(env, context, \"controller.visualizationSVG\"), \"cols\": \"60\", \"rows\": \"1\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/save-visualization', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"consumption-title\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n         \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"type\",\"button\");\n        dom.setAttribute(el3,\"class\",\"btn btn-default btn-xs\");\n        dom.setAttribute(el3,\"style\",\"display: inline;\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"glyphicon glyphicon-save\");\n        dom.setAttribute(el4,\"aria-hidden\",\"true\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"  Save\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0, 1]);\n        var element1 = dom.childAt(element0, [3]);\n        var morph0 = dom.createMorphAt(element0,1,1);\n        inline(env, morph0, context, \"input\", [], {\"value\": get(env, context, \"controller.configName\"), \"placeholder\": \"Save settings\", \"size\": \"15\", \"class\": \"form-control layout-width-save layout-inline\"});\n        element(env, element1, context, \"action\", [\"save\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/saved-visualizations', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"br\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            content(env, morph0, context, \"visualization.configurationName\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          block(env, morph0, context, \"link-to\", [\"visualization\", \"visualizationConfiguration\", get(env, context, \"visualization.id\")], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row box\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"large-12 medium-12 columns\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"inner_box dsdefault\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"inner_title_box\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"h7\");\n        var el6 = dom.createTextNode(\"Load\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        var el5 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"                                                            \\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"                                         \\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"  \");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 1, 1, 3]),1,1);\n        block(env, morph0, context, \"each\", [get(env, context, \"controller\")], {\"keyword\": \"visualization\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/select-field', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1,\"class\",\"configurationOption\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"  \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        content(env, morph0, context, \"view.label\");\n        inline(env, morph1, context, \"view\", [get(env, context, \"Ember.Select\")], {\"viewName\": \"selectField\", \"content\": get(env, context, \"view.values\"), \"optionLabelPath\": \"content.label\", \"selection\": get(env, context, \"view.content\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/slide-show', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createElement(\"a\");\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"span\");\n          var el4 = dom.createTextNode(\" \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [0, 0]);\n          var element1 = dom.childAt(element0, [1]);\n          element(env, element0, context, \"action\", [\"chooseVisualization\", get(env, context, \"visualization\")], {});\n          element(env, element1, context, \"bind-attr\", [], {\"data-visualization-name\": \"visualization.visualizationName\"});\n          element(env, element1, context, \"bind-attr\", [], {\"class\": \"visualization.valid:valid-suggestion:invalid-suggestion :visualization-thumbnail\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"each\", [get(env, context, \"view.slides\")], {\"keyword\": \"visualization\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/text-field', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1,\"class\",\"configurationOption\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\" \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        content(env, morph0, context, \"view.label\");\n        inline(env, morph1, context, \"input\", [], {\"type\": \"text\", \"value\": get(env, context, \"view.content\"), \"on\": \"enter\", \"class\": \"form-control layout-width\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/tuning-check', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1,\"class\",\"configurationOption\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"  \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        content(env, morph0, context, \"view.label\");\n        inline(env, morph1, context, \"input\", [], {\"type\": \"checkbox\", \"checked\": get(env, context, \"view.content\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/tuning-input', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1,\"class\",\"configurationOption\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"  \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        content(env, morph0, context, \"view.label\");\n        inline(env, morph1, context, \"input\", [], {\"type\": \"text\", \"value\": get(env, context, \"view.content\"), \"on\": \"key-press\", \"class\": \"form-control Number\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/tuning-numinput', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1,\"class\",\"configurationOption\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"  \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        content(env, morph0, context, \"view.label\");\n        inline(env, morph1, context, \"input\", [], {\"type\": \"text\", \"value\": get(env, context, \"view.content\"), \"on\": \"key-press\", \"class\": \"form-control layout-width\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/templates/visualization', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"glyphicon glyphicon-resize-full\");\n          dom.setAttribute(el1,\"aria-hidden\",\"true\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"glyphicon glyphicon-resize-small\");\n          dom.setAttribute(el1,\"aria-hidden\",\"true\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        dom.setAttribute(el1,\"id\",\"v_container\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\" Visualization Selection \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"panel panel-default\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"panel-heading\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"h1\");\n        dom.setAttribute(el5,\"class\",\"panel-title pull-left\");\n        var el6 = dom.createTextNode(\"Select Visualization\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"panel-body\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"div\");\n        dom.setAttribute(el5,\"class\",\"sliderWrapper\");\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\" Visualization Configuration - Left: Tree with data source; Right: dimension mapping \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"panel panel-default\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"panel-heading\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"h1\");\n        dom.setAttribute(el5,\"class\",\"panel-title pull-left\");\n        var el6 = dom.createTextNode(\"Configure Visualization\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"panel-body\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"div\");\n        dom.setAttribute(el5,\"class\",\"row\");\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"div\");\n        dom.setAttribute(el6,\"class\",\"col-md-6\");\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"div\");\n        dom.setAttribute(el7,\"class\",\"panel panel-default\");\n        var el8 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createElement(\"div\");\n        dom.setAttribute(el8,\"class\",\"panel-heading\");\n        var el9 = dom.createTextNode(\"\\n                                \");\n        dom.appendChild(el8, el9);\n        var el9 = dom.createElement(\"h1\");\n        dom.setAttribute(el9,\"class\",\"panel-title pull-left\");\n        var el10 = dom.createTextNode(\"Selected Data\");\n        dom.appendChild(el9, el10);\n        dom.appendChild(el8, el9);\n        var el9 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el8, el9);\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createElement(\"div\");\n        dom.setAttribute(el8,\"class\",\"panel-body\");\n        var el9 = dom.createTextNode(\"\\n                                \");\n        dom.appendChild(el8, el9);\n        var el9 = dom.createComment(\"\");\n        dom.appendChild(el8, el9);\n        var el9 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el8, el9);\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"div\");\n        dom.setAttribute(el6,\"class\",\"col-md-6\");\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"div\");\n        dom.setAttribute(el7,\"class\",\"panel panel-default\");\n        var el8 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createElement(\"div\");\n        dom.setAttribute(el8,\"class\",\"panel-heading\");\n        var el9 = dom.createTextNode(\"\\n                                \");\n        dom.appendChild(el8, el9);\n        var el9 = dom.createElement(\"h1\");\n        dom.setAttribute(el9,\"class\",\"panel-title pull-left\");\n        var el10 = dom.createTextNode(\"Visualization Options\");\n        dom.appendChild(el9, el10);\n        dom.appendChild(el8, el9);\n        var el9 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el8, el9);\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createElement(\"div\");\n        dom.setAttribute(el8,\"class\",\"panel-body\");\n        var el9 = dom.createTextNode(\"\\n                                \");\n        dom.appendChild(el8, el9);\n        var el9 = dom.createComment(\"\");\n        dom.appendChild(el8, el9);\n        var el9 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el8, el9);\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n\\n                        \");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"panel-footer clearfix\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"type\",\"button\");\n        dom.setAttribute(el5,\"class\",\"btn btn-default pull-right\");\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"span\");\n        dom.setAttribute(el6,\"class\",\"glyphicon glyphicon-stats\");\n        dom.setAttribute(el6,\"aria-hidden\",\"true\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"   Select Data\\n                \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\" Visualization \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"panel panel-default\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"panel-heading\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"h1\");\n        dom.setAttribute(el5,\"class\",\"panel-title pull-left\");\n        var el6 = dom.createTextNode(\"Configured Visualization\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"type\",\"button\");\n        dom.setAttribute(el5,\"class\",\"btn btn-default btn-xs pull-right\");\n        var el6 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"                \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"panel-body\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"panel-footer clearfix\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"div\");\n        dom.setAttribute(el5,\"class\",\"row\");\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"div\");\n        dom.setAttribute(el6,\"class\",\"col-md-6\");\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"div\");\n        dom.setAttribute(el7,\"class\",\"row\");\n        var el8 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createComment(\"\");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"div\");\n        dom.setAttribute(el7,\"class\",\"row\");\n        var el8 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createComment(\"\");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"div\");\n        dom.setAttribute(el6,\"class\",\"col-md-6\");\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createComment(\"<div class=\\\"col-md-6\\\"></div>\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element1, [7]);\n        var element3 = dom.childAt(element2, [3, 1]);\n        var element4 = dom.childAt(element2, [5, 1]);\n        var element5 = dom.childAt(element0, [3]);\n        var element6 = dom.childAt(element5, [3]);\n        var element7 = dom.childAt(element6, [1, 3]);\n        var element8 = dom.childAt(element6, [5, 1]);\n        var element9 = dom.childAt(element8, [1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element1, [3, 3, 1]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element3, [1, 1, 3]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(element3, [3, 1, 3]),1,1);\n        var morph3 = dom.createMorphAt(element7,1,1);\n        var morph4 = dom.createMorphAt(dom.childAt(element6, [3]),1,1);\n        var morph5 = dom.createMorphAt(dom.childAt(element9, [1]),1,1);\n        var morph6 = dom.createMorphAt(dom.childAt(element9, [3]),1,1);\n        var morph7 = dom.createMorphAt(dom.childAt(element8, [3]),1,1);\n        element(env, element1, context, \"bind-attr\", [], {\"class\": \"isToggled:col-md-5:col-md-0\"});\n        inline(env, morph0, context, \"view\", [\"slide-show\"], {\"slides\": get(env, context, \"controller.model\")});\n        inline(env, morph1, context, \"view\", [\"properties-list\"], {\"categories\": get(env, context, \"controller.categorizedProperties\")});\n        inline(env, morph2, context, \"view\", [\"visualization-options\"], {\"options\": get(env, context, \"controller.structureOptions\"), \"config\": get(env, context, \"controller.visualizationConfiguration\")});\n        element(env, element4, context, \"action\", [\"select\"], {});\n        element(env, element5, context, \"bind-attr\", [], {\"class\": \"isToggled:col-md-7:col-md-12\"});\n        element(env, element7, context, \"action\", [\"toggle\"], {});\n        block(env, morph3, context, \"if\", [get(env, context, \"isToggled\")], {}, child0, child1);\n        inline(env, morph4, context, \"view\", [\"draw-visualization\"], {\"id\": \"visualization\", \"visualization\": get(env, context, \"controller.drawnVisualization\"), \"configurationArray\": get(env, context, \"controller.visualizationConfiguration\"), \"isToggled\": get(env, context, \"controller.isToggled\")});\n        inline(env, morph5, context, \"partial\", [\"export-visualization\"], {});\n        inline(env, morph6, context, \"partial\", [\"save-visualization\"], {});\n        inline(env, morph7, context, \"view\", [\"visualization-options\"], {\"options\": get(env, context, \"controller.layoutOptions\"), \"config\": get(env, context, \"controller.visualizationConfiguration\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('linda-vis-fe/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/components/data-table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/data-table.js should pass jshint', function() { \n    ok(true, 'components/data-table.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/components/draggable-item.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/draggable-item.js should pass jshint', function() { \n    ok(true, 'components/draggable-item.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/components/droppable-area.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/droppable-area.js should pass jshint', function() { \n    ok(true, 'components/droppable-area.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/components/property-item.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/property-item.js should pass jshint', function() { \n    ok(true, 'components/property-item.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/components/tree-selection.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/tree-selection.js should pass jshint', function() { \n    ok(true, 'components/tree-selection.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/controllers/datasource.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/datasource.js should pass jshint', function() { \n    ok(true, 'controllers/datasource.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/controllers/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/index.js should pass jshint', function() { \n    ok(true, 'controllers/index.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/controllers/visconfiguration.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/visconfiguration.js should pass jshint', function() { \n    ok(true, 'controllers/visconfiguration.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/controllers/visualization.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/visualization.js should pass jshint', function() { \n    ok(true, 'controllers/visualization.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/helpers/resolver', ['exports', 'ember/resolver', 'linda-vis-fe/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('linda-vis-fe/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/helpers/start-app', ['exports', 'ember', 'linda-vis-fe/app', 'linda-vis-fe/router', 'linda-vis-fe/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('linda-vis-fe/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/models/dataselection.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/dataselection.js should pass jshint', function() { \n    ok(true, 'models/dataselection.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/models/datasource.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/datasource.js should pass jshint', function() { \n    ok(true, 'models/datasource.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/models/visualization.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/visualization.js should pass jshint', function() { \n    ok(true, 'models/visualization.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/application.js should pass jshint', function() { \n    ok(true, 'routes/application.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/routes/dataselection.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/dataselection.js should pass jshint', function() { \n    ok(true, 'routes/dataselection.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/routes/datasource.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/datasource.js should pass jshint', function() { \n    ok(true, 'routes/datasource.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/routes/saved-visualizations.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/saved-visualizations.js should pass jshint', function() { \n    ok(true, 'routes/saved-visualizations.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/routes/visualization.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/visualization.js should pass jshint', function() { \n    ok(true, 'routes/visualization.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/test-helper', ['linda-vis-fe/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('linda-vis-fe/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/utils/area-chart.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/area-chart.js should pass jshint', function() { \n    ok(true, 'utils/area-chart.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/utils/bubble-chart.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/bubble-chart.js should pass jshint', function() { \n    ok(true, 'utils/bubble-chart.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/utils/column-chart.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/column-chart.js should pass jshint', function() { \n    ok(true, 'utils/column-chart.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/utils/csv-data-module.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/csv-data-module.js should pass jshint', function() { \n    ok(true, 'utils/csv-data-module.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/utils/export-visualization.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/export-visualization.js should pass jshint', function() { \n    ok(true, 'utils/export-visualization.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/utils/line-chart.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/line-chart.js should pass jshint', function() { \n    ok(true, 'utils/line-chart.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/utils/map.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/map.js should pass jshint', function() { \n    ok(true, 'utils/map.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/utils/pie-chart.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/pie-chart.js should pass jshint', function() { \n    ok(true, 'utils/pie-chart.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/utils/scatter-chart.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/scatter-chart.js should pass jshint', function() { \n    ok(true, 'utils/scatter-chart.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/utils/sparql-data-module.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/sparql-data-module.js should pass jshint', function() { \n    ok(true, 'utils/sparql-data-module.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/utils/table-data-module.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/table-data-module.js should pass jshint', function() { \n    ok(true, 'utils/table-data-module.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/utils/template-mapping.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/template-mapping.js should pass jshint', function() { \n    ok(true, 'utils/template-mapping.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/utils/tree-selection-data-module.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/tree-selection-data-module.js should pass jshint', function() { \n    ok(true, 'utils/tree-selection-data-module.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/utils/util.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/util.js should pass jshint', function() { \n    ok(true, 'utils/util.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/utils/visualization-registry.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/visualization-registry.js should pass jshint', function() { \n    ok(true, 'utils/visualization-registry.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/views/draw-visualization.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/draw-visualization.js should pass jshint', function() { \n    ok(true, 'views/draw-visualization.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/views/properties-list.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/properties-list.js should pass jshint', function() { \n    ok(true, 'views/properties-list.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/views/slide-show.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/slide-show.js should pass jshint', function() { \n    ok(true, 'views/slide-show.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/tests/views/visualization-options.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/visualization-options.js should pass jshint', function() { \n    ok(true, 'views/visualization-options.js should pass jshint.'); \n  });\n\n});","define('linda-vis-fe/utils/area-chart', ['exports', 'linda-vis-fe/utils/util', 'linda-vis-fe/utils/export-visualization'], function (exports, util, exportVis) {\n\n    'use strict';\n\n    var areachart = (function () {\n\n        function draw(configuration, visualisationContainerID) {\n            console.log(\"### INITIALIZE VISUALISATION - AREA CHART\");\n\n            var container = $(\"#\" + visualisationContainerID);\n            container.empty();\n\n            var xAxis = configuration[\"Horizontal Axis\"];\n            var yAxis = configuration[\"Vertical Axis\"];\n            var group = configuration[\"Series\"];\n\n            if (!(configuration.dataModule && configuration.datasourceLocation && xAxis && yAxis && group)) {\n                return $.Deferred().resolve().promise();\n            }\n\n            if (xAxis.length === 0 || yAxis.length === 0) {\n                return $.Deferred().resolve().promise();\n            }\n\n            var dataModule = configuration.dataModule;\n            var location = configuration.datasourceLocation;\n            var graph = configuration.datasourceGraph;\n            var gridlines = configuration.Gridlines;\n            var tooltip = configuration.Tooltip;\n            var hLabel = configuration[\"Horizontal Label\"];\n            var vLabel = configuration[\"Vertical Label\"];\n\n            var selection = {\n                dimension: yAxis, // measure\n                multidimension: xAxis.concat(group),\n                gridlines: gridlines,\n                tooltip: tooltip,\n                hLabel: hLabel,\n                vLabel: vLabel\n            };\n\n            console.log(\"VISUALISATION SELECTION FOR AREA CHART:\");\n            console.dir(selection);\n\n            var svg = dimple.newSvg(\"#\" + visualisationContainerID, container.width(), container.height());\n\n            return dataModule.parse(location, graph, selection).then(function (inputData) {\n                var columnsHeaders = inputData[0];\n                var data = util['default'].createRows(inputData);\n                console.log(\"GENERATE INPUT DATA FORMAT FOR AREA CHART\");\n                console.dir(data);\n\n                var chart = new dimple.chart(svg, data);\n\n                var x = chart.addCategoryAxis(\"x\", columnsHeaders[1]); // x axis: ordinal values\n                var y = chart.addMeasureAxis(\"y\", columnsHeaders[0]); // y axis: one measure (scale) \n\n                var series = null;\n\n                if (group.length > 0) {\n                    series = columnsHeaders.slice(2);\n                }\n\n                chart.addSeries(series, dimple.plot.area);\n                chart.addLegend(\"10%\", \"5%\", \"80%\", 20, \"right\");\n\n                //gridlines tuning\n                //x.showGridlines = selection.gridlines;\n                //y.showGridlines = selection.gridlines;\n                //titles\n                if (selection.hLabel === \"\" || selection.hLabel === \"Label\") {\n                    selection.hLabel = columnsHeaders[1];\n                }\n                if (selection.vLabel === \"\" || selection.vLabel === \"Label\") {\n                    selection.vLabel = columnsHeaders[0];\n                }\n                x.title = selection.hLabel;\n                y.title = selection.vLabel;\n                //ticks\n                x.ticks = selection.gridlines;\n                y.ticks = selection.gridlines;\n                //tooltip\n                if (selection.tooltip === false) {\n                    chart.addSeries(series, dimple.plot.area).addEventHandler(\"mouseover\", function () {});\n                }\n\n                chart.draw();\n\n                //prevent overlapping if there are more than 25 ticks\n                if (x.shapes.selectAll(\"text\")[0].length > 25) {\n                    util['default'].cleanAxis(x, 5);\n                }\n            });\n        }\n\n        function export_as_PNG() {\n            return exportVis['default'].export_PNG();\n        }\n\n        function export_as_SVG() {\n            return exportVis['default'].export_SVG();\n        }\n\n        function get_SVG() {\n            return exportVis['default'].get_SVG();\n        }\n\n        return {\n            export_as_PNG: export_as_PNG,\n            export_as_SVG: export_as_SVG,\n            get_SVG: get_SVG,\n            draw: draw\n        };\n    })();\n\n    exports['default'] = areachart;\n\n});","define('linda-vis-fe/utils/bubble-chart', ['exports', 'linda-vis-fe/utils/util', 'linda-vis-fe/utils/export-visualization'], function (exports, util, exportVis) {\n\n    'use strict';\n\n    var bubblechart = (function () {\n        var seriesHeaders = [];\n        var data = [];\n\n        function draw(configuration, visualisationContainerID) {\n            console.log(\"### INITIALIZE VISUALISATION - BUBBLE CHART\");\n\n            var container = $(\"#\" + visualisationContainerID);\n            container.empty();\n\n            var xAxis = configuration[\"Horizontal Axis\"];\n            var yAxis = configuration[\"Vertical Axis\"];\n            var size = configuration[\"Size\"];\n            var label = configuration[\"Label\"];\n            var group = configuration[\"Groups\"];\n\n            if (!(configuration.dataModule && configuration.datasourceLocation && xAxis && yAxis && size && label && group)) {\n                return $.Deferred().resolve().promise();\n            }\n\n            if (xAxis.length === 0 || yAxis.length === 0 || size.lenght === 0) {\n                return $.Deferred().resolve().promise();\n            }\n\n            var dataModule = configuration.dataModule;\n            var location = configuration.datasourceLocation;\n            var graph = configuration.datasourceGraph;\n            var gridlines = configuration.Gridlines;\n            var tooltip = configuration.Tooltip;\n            var hLabel = configuration[\"Horizontal Label\"];\n            var vLabel = configuration[\"Vertical Label\"];\n\n            var selection = {\n                dimension: [],\n                multidimension: label.concat(xAxis).concat(yAxis).concat(size).concat(group),\n                gridlines: gridlines,\n                tooltip: tooltip,\n                hLabel: hLabel,\n                vLabel: vLabel\n            };\n\n            console.log(\"VISUALIZATION SELECTION FOR BUBBLE CHART:\");\n            console.dir(selection);\n\n            var svg = dimple.newSvg(\"#\" + visualisationContainerID, container.width(), container.height());\n\n            return dataModule.parse(location, graph, selection).then(function (inputData) {\n                console.log(\"GENERATE INPUT DATA FORMAT FOR BUBBLE CHART - INPUT DATA\");\n                console.dir(inputData);\n                seriesHeaders = inputData[0];\n                data = util['default'].createRows(inputData);\n\n                if (label.length === 0) {\n                    seriesHeaders.splice(0, 0, \"Number\");\n                    for (var i = 0; i < data.length; i++) {\n                        var row = data[i];\n                        row[\"Number\"] = i;\n                    }\n                }\n\n                console.log(\"GENERATE INPUT DATA FORMAT FOR BUBBLE CHART - OUTPUT DATA\");\n                console.dir(data);\n\n                var chart = new dimple.chart(svg, data);\n\n                var labelAxisName = seriesHeaders[0];\n                var xAxisName = seriesHeaders[1];\n                var yAxisName = seriesHeaders[2];\n\n                var sizeAxisName;\n                if (size.length > 0) {\n                    sizeAxisName = seriesHeaders[3];\n                }\n\n                var groupAxisName;\n                if (group.length > 0) {\n                    groupAxisName = seriesHeaders[3 + size.length];\n                }\n\n                var x = chart.addMeasureAxis(\"x\", xAxisName);\n                var y = chart.addMeasureAxis(\"y\", yAxisName);\n\n                if (sizeAxisName) {\n                    chart.addMeasureAxis(\"z\", sizeAxisName);\n                }\n\n                var series = [labelAxisName];\n\n                if (groupAxisName) {\n                    series.push(groupAxisName);\n                }\n\n                console.log(\"SERIES:\");\n                console.dir(series);\n\n                chart.addSeries(series, dimple.plot.bubble);\n                chart.addLegend(\"50%\", \"10%\", 500, 20, \"right\");\n\n                //gridlines tuning\n                //x.showGridlines = selection.gridlines;\n                //y.showGridlines = selection.gridlines;\n                //titles\n                if (selection.hLabel === \"\" || selection.hLabel === \"Label\") {\n                    selection.hLabel = seriesHeaders[1];\n                }\n                if (selection.vLabel === \"\" || selection.vLabel === \"Label\") {\n                    selection.vLabel = seriesHeaders[2];\n                }\n                x.title = selection.hLabel;\n                y.title = selection.vLabel;\n                //ticks\n                x.ticks = selection.gridlines;\n                y.ticks = selection.gridlines;\n                //tooltip\n                if (selection.tooltip === false) {\n                    chart.addSeries(series, dimple.plot.bubble).addEventHandler(\"mouseover\", function () {});\n                }\n\n                chart.draw();\n            });\n        }\n\n        function export_as_PNG() {\n            return exportVis['default'].export_PNG();\n        }\n\n        function export_as_SVG() {\n            return exportVis['default'].export_SVG();\n        }\n\n        function get_SVG() {\n            return exportVis['default'].get_SVG();\n        }\n\n        return {\n            export_as_PNG: export_as_PNG,\n            export_as_SVG: export_as_SVG,\n            get_SVG: get_SVG,\n            draw: draw\n        };\n    })();\n\n    exports['default'] = bubblechart;\n\n});","define('linda-vis-fe/utils/column-chart', ['exports', 'linda-vis-fe/utils/util', 'linda-vis-fe/utils/export-visualization'], function (exports, util, exportVis) {\n\n    'use strict';\n\n    var columnchart = (function () {\n        var seriesHeaders = [];\n        var series = [];\n\n        function draw(configuration, visualisationContainerID) {\n            console.log(\"### INITIALIZE VISUALISATION - COLUMN CHART\");\n\n            var container = $(\"#\" + visualisationContainerID);\n            container.empty();\n\n            var xAxis = configuration[\"Horizontal Axis\"];\n            var yAxis = configuration[\"Vertical Axis\"];\n            var group = configuration[\"Groups\"];\n\n            if (!(configuration.dataModule && configuration.datasourceLocation && xAxis && yAxis && group)) {\n                return $.Deferred().resolve().promise();\n            }\n\n            if (xAxis.length === 0 || yAxis.length === 0) {\n                return $.Deferred().resolve().promise();\n            }\n\n            var dataModule = configuration.dataModule;\n            var location = configuration.datasourceLocation;\n            var graph = configuration.datasourceGraph;\n            var gridlines = configuration.Gridlines;\n            var tooltip = configuration.Tooltip;\n            var hLabel = configuration[\"Horizontal Label\"];\n            var vLabel = configuration[\"Vertical Label\"];\n\n            var selection = {\n                dimension: yAxis, // measure\n                multidimension: xAxis.concat(group), // categories\n                gridlines: gridlines,\n                tooltip: tooltip,\n                hLabel: hLabel,\n                vLabel: vLabel\n            };\n\n            console.log(\"VISUALIZATION SELECTION FOR COLUMN CHART:\");\n            console.dir(selection);\n\n            var svg = dimple.newSvg(\"#\" + visualisationContainerID, container.width(), container.height());\n\n            return dataModule.parse(location, graph, selection).then(function (inputData) {\n                seriesHeaders = inputData[0];\n                series = util['default'].createRows(inputData);\n                console.log(\"GENERATE INPUT DATA FORMAT FOR COLUMN CHART\");\n                console.dir(series);\n\n                var chart = new dimple.chart(svg, series);\n\n                var categoryAxis;\n                var measureAxis;\n                if (configuration.horizontal) {\n                    categoryAxis = \"y\";\n                    measureAxis = \"x\";\n                } else {\n                    categoryAxis = \"x\";\n                    measureAxis = \"y\";\n                }\n\n                var dim1 = chart.addCategoryAxis(categoryAxis, seriesHeaders.slice(1, 1 + xAxis.length + group.length)); // x axis: more categories\n                var dim2 = chart.addMeasureAxis(measureAxis, seriesHeaders[0]); // y axis: one measure (scale)\n\n                if (group.length > 0) {\n                    // simple column groups\n                    chart.addSeries(seriesHeaders[seriesHeaders.length - 1], dimple.plot.bar);\n                } else {\n                    chart.addSeries(null, dimple.plot.bar);\n                }\n                chart.addLegend(\"10%\", \"5%\", \"80%\", 20, \"right\");\n\n                if (selection.hLabel === \"\" || selection.hLabel === \"Label\") {\n                    selection.hLabel = seriesHeaders[1];\n                }\n                if (selection.vLabel === \"\" || selection.vLabel === \"Label\") {\n                    selection.vLabel = seriesHeaders[0];\n                }\n                dim1.title = selection.hLabel;\n                dim2.title = selection.vLabel;\n\n                dim1.ticks = selection.gridlines;\n                dim2.ticks = selection.gridlines;\n\n                //tooltip\n                if (selection.tooltip === false) {\n                    chart.addSeries(series, dimple.plot.bar).addEventHandler(\"mouseover\", function () {});\n                }\n\n                chart.draw();\n\n                //prevent overlapping if there are more than 25 ticks\n                if (dim1.shapes.selectAll(\"text\")[0].length > 25) {\n                    util['default'].cleanAxis(dim1, 5);\n                }\n            });\n        }\n\n        function export_as_PNG() {\n            return exportVis['default'].export_PNG();\n        }\n\n        function export_as_SVG() {\n            return exportVis['default'].export_SVG();\n        }\n\n        function get_SVG() {\n            return exportVis['default'].get_SVG();\n        }\n\n        return {\n            export_as_PNG: export_as_PNG,\n            export_as_SVG: export_as_SVG,\n            get_SVG: get_SVG,\n            draw: draw\n        };\n    })();\n\n    exports['default'] = columnchart;\n\n});","define('linda-vis-fe/utils/csv-data-module', ['exports', 'linda-vis-fe/utils/util'], function (exports, util) {\n\n    'use strict';\n\n    var csv_data_module = (function () {\n        var saved_location;\n        var saved_data;\n\n        function parse(location, graph, selection) {\n            console.log('CSV DATA MODULE');\n            var dimension = selection.dimension;\n            var multidimension = selection.multidimension;\n\n            return queryInstances(location, null, dimension.concat(multidimension));\n        }\n\n        function queryInstances(location, dummy, selection) {\n            console.log('QUERY INSTANCES');\n\n            var dataPromise;\n            if (saved_location === location) {\n                dataPromise = $.Deferred().resolve(saved_data).promise();\n            } else {\n                dataPromise = $.get(location);\n            }\n\n            return dataPromise.then(function (data) {\n                saved_location = location;\n                saved_data = data;\n                return $.csv.toArrays(data, { onParseValue: util['default'].toScalar });\n            }).then(function (dataArray) {\n                var columns = [];\n                for (var i = 0; i < selection.length; i++) {\n                    var column = _.rest(selection[i].parent);\n                    columns.push(column[0]);\n                }\n                return convert(dataArray, columns);\n            });\n        }\n\n        function queryClasses() {\n            console.log('QUERY CLASSES');\n\n            var dfd = new $.Deferred();\n            var dataInfo = {\n                id: 'Columns',\n                label: 'Columns',\n                type: 'Class',\n                grandchildren: true\n            };\n            dfd.resolve([dataInfo]);\n            return dfd.promise();\n        }\n\n        function queryProperties(location, dummy1, dummy2, _properties) {\n            console.log('QUERY PTOPERTIES');\n\n            var dfd = new $.Deferred();\n\n            if (_properties.length > 0) {\n                dfd.resolve([]);\n                return dfd.promise();\n            } else {\n                return $.get(location).then(function (data) {\n                    return $.csv.toArrays(data, { onParseValue: util['default'].toScalar, start: 0, end: 2 });\n                }).then(function (dataArray) {\n                    var names = dataArray[0];\n                    var values = dataArray[1];\n                    var columns = [];\n\n                    for (var i = 0; i < names.length; i++) {\n                        var dataInfo = {\n                            id: i.toString(),\n                            label: names[i],\n                            grandchildren: false,\n                            role: null,\n                            special: false,\n                            type: util['default'].predictValueSOM(values[i])\n                        };\n                        columns.push(dataInfo);\n                    }\n                    return columns;\n                });\n            }\n        }\n\n        function convert(arrayData, columnsOrder) {\n            console.log('CONVERT');\n\n            var result = [];\n            var row = [];\n\n            for (var i = 0; i < arrayData.length; i++) {\n                var record = [];\n                row = arrayData[i];\n                for (var j = 0; j < columnsOrder.length; j++) {\n                    var order = parseInt(columnsOrder[j].id);\n                    record.push(row[order]);\n                }\n                result.push(record);\n            }\n            return result;\n        }\n\n        return {\n            queryClasses: queryClasses,\n            queryProperties: queryProperties,\n            queryInstances: queryInstances,\n            parse: parse\n        };\n    })();\n\n    exports['default'] = csv_data_module;\n\n});","define('linda-vis-fe/utils/export-visualization', ['exports'], function (exports) {\n\n    'use strict';\n\n    /* global $ */\n    var exportVis = (function () {\n\n        function export_PNG() {\n            var svg = get_SVG();\n            var image = $('<img />', { 'id': 'chart', 'style': 'display:none', 'src': 'data:image/svg+xml,' + encodeURIComponent(svg) });\n            image.appendTo($('#visualization'));\n            var dfd = new $().Deferred();\n\n            $('#chart').one('load', function () {\n                var canvas = $('<canvas/>', { 'id': 'canvas' });\n                canvas[0].width = 1050;\n                canvas[0].height = 510;\n                canvas.appendTo($('#visualization'));\n                var context = canvas[0].getContext('2d');\n\n                // Generate a PNG with canvg.\n                context.drawSvg(svg, 0, 0, 1050, 510);\n\n                var pngURL = canvas[0].toDataURL('image/png');\n                var downloadURL = pngURL.replace(/^data:image\\/png/, 'data:application/octet-stream');\n\n                dfd.resolve(downloadURL);\n\n                canvas.remove();\n                $(this).remove();\n            }).each(function () {\n                if (this.complete) {\n                    $(this).load();\n                }\n            });\n\n            var imgURL = dfd.promise();\n\n            return imgURL;\n        }\n\n        function export_SVG() {\n            var svg = get_SVG();\n            var svgURL = 'data:application/octet-stream,' + encodeURIComponent(svg);\n\n            return svgURL;\n        }\n\n        function get_SVG(cssFilename) {\n            var svg = $('#visualization').find('svg');\n\n            if (svg.length === 0) {\n                return;\n            }\n\n            var serializer = new XMLSerializer();\n            var svg_ = serializer.serializeToString(svg[0]);\n\n            svg.find('defs').remove();\n\n            svg.attr('version', '1.1');\n            svg.attr('xmlns', 'http://www.w3.org/2000/svg');\n            svg.attr('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n\n            if (cssFilename) {\n                var css = '';\n\n                // Take all the styles from your visualization library and make them inline.\n                $().each(document.styleSheets, function (sheetIndex, sheet) {\n\n                    if (sheet.href !== null && endsWith(sheet.href, cssFilename)) {\n                        $().each(sheet.cssRules || sheet.rules, function (ruleIndex, rule) {\n\n                            css += rule.cssText + '\\n';\n                        });\n                    }\n                });\n\n                var style = $('<style />', { 'type': 'text/css' });\n                style.prependTo(svg);\n                svg_ = svg_.replace('</style>', '<![CDATA[' + css + ']]></style>');\n            }\n\n            return svg_;\n        }\n\n        function endsWith(str, suffix) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        return {\n            export_PNG: export_PNG,\n            export_SVG: export_SVG,\n            get_SVG: get_SVG\n        };\n    })();\n\n    exports['default'] = exportVis;\n\n});","define('linda-vis-fe/utils/line-chart', ['exports', 'linda-vis-fe/utils/util', 'linda-vis-fe/utils/export-visualization'], function (exports, util, exportVis) {\n\n    'use strict';\n\n    var linechart = (function () {\n\n        function draw(configuration, visualisationContainerID) {\n            console.log(\"### INITIALIZE VISUALISATION - LINE CHART\");\n\n            var container = $(\"#\" + visualisationContainerID);\n            container.empty();\n\n            var xAxis = configuration[\"Horizontal Axis\"];\n            var yAxis = configuration[\"Vertical Axis\"];\n            var group = configuration[\"Series\"];\n\n            if (!(configuration.dataModule && configuration.datasourceLocation && xAxis && yAxis && group)) {\n                return $.Deferred().resolve().promise();\n            }\n\n            if (xAxis.length === 0 || yAxis.length === 0) {\n                return $.Deferred().resolve().promise();\n            }\n\n            var dataModule = configuration.dataModule;\n            var location = configuration.datasourceLocation;\n            var graph = configuration.datasourceGraph;\n            var gridlines = configuration.Gridlines;\n            var tooltip = configuration.Tooltip;\n            var hLabel = configuration[\"Horizontal Label\"];\n            var vLabel = configuration[\"Vertical Label\"];\n\n            var selection = {\n                dimension: yAxis, // measure\n                multidimension: xAxis.concat(group),\n                gridlines: gridlines,\n                tooltip: tooltip,\n                hLabel: hLabel,\n                vLabel: vLabel\n            };\n\n            console.log(\"VISUALISATION SELECTION FOR LINE CHART:\");\n            console.dir(selection);\n\n            var svg = dimple.newSvg(\"#\" + visualisationContainerID, container.width(), container.height());\n\n            return dataModule.parse(location, graph, selection).then(function (inputData) {\n                var columnsHeaders = inputData[0];\n                var data = util['default'].createRows(inputData);\n                console.log(\"GENERATE INPUT DATA FORMAT FOR LINE CHART\");\n                console.dir(data);\n\n                var chart = new dimple.chart(svg, data);\n\n                var x = chart.addCategoryAxis(\"x\", columnsHeaders[1]); // x axis: ordinal values\n                var y = chart.addMeasureAxis(\"y\", columnsHeaders[0]); // y axis: one measure (scale)\n\n                var series = null;\n\n                if (group.length > 0) {\n                    series = columnsHeaders.slice(2);\n                }\n\n                chart.addSeries(series, dimple.plot.line);\n                chart.addLegend(\"10%\", \"5%\", \"80%\", 20, \"right\");\n\n                //gridlines tuning\n                //x.showGridlines = selection.gridlines;\n                //y.showGridlines = selection.gridlines;\n                //titles\n                if (selection.hLabel === \"\" || selection.hLabel === \"Label\") {\n                    selection.hLabel = columnsHeaders[1];\n                }\n                if (selection.vLabel === \"\" || selection.vLabel === \"Label\") {\n                    selection.vLabel = columnsHeaders[0];\n                }\n                x.title = selection.hLabel;\n                y.title = selection.vLabel;\n                //ticks\n                x.ticks = selection.gridlines;\n                y.ticks = selection.gridlines;\n\n                //tooltip\n                if (selection.tooltip === false) {\n                    chart.addSeries(series, dimple.plot.line).addEventHandler(\"mouseover\", function () {});\n                }\n\n                chart.draw();\n\n                //prevent overlapping if there are more than 25 ticks\n                if (x.shapes.selectAll(\"text\")[0].length > 25) {\n                    util['default'].cleanAxis(x, 5);\n                }\n            });\n        }\n\n        function export_as_PNG() {\n            return exportVis['default'].export_PNG();\n        }\n\n        function export_as_SVG() {\n            return exportVis['default'].export_SVG();\n        }\n\n        function get_SVG() {\n            return exportVis['default'].get_SVG();\n        }\n\n        return {\n            export_as_PNG: export_as_PNG,\n            export_as_SVG: export_as_SVG,\n            get_SVG: get_SVG,\n            draw: draw\n        };\n    })();\n\n    exports['default'] = linechart;\n\n});","define('linda-vis-fe/utils/map', ['exports', 'linda-vis-fe/utils/util'], function (exports, util) {\n\n    'use strict';\n\n    var map = (function () {\n        // map/openstreetmap module (js module pattern)\n        var map = null;\n        function draw(configuration, visualisationContainer) {\n            if (L && !L.Icon.Default.imagePath) {\n                L.Icon.Default.imagePath = \"leaflet/images\";\n            }\n            console.log(\"### INITIALIZE VISUALISATION - MAP\");\n            if (map) {\n                map = map.remove();\n                map = null;\n            }\n\n            $(\"#\" + visualisationContainer).empty();\n            var label = configuration[\"Label\"];\n            var lat = configuration[\"Latitude\"];\n            var long = configuration[\"Longitude\"];\n            var indicator = configuration[\"Indicator\"];\n            if (!(configuration.dataModule && configuration.datasourceLocation && label && lat && long && indicator)) {\n                return $.Deferred().resolve().promise();\n            }\n\n            if (lat.length === 0 || long.length === 0) {\n                return $.Deferred().resolve().promise();\n            }\n\n            map = new L.Map(visualisationContainer);\n            L.tileLayer(\"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n                attribution: \"&copy; <a href=\\\"http://openstreetmap.org\\\">OpenStreetMap</a> contributors, <a href=\\\"http://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA</a>\",\n                zoom: 8\n            }).addTo(map);\n            var dataModule = configuration.dataModule;\n            var latPropertyInfo = lat[0];\n            var longPropertyInfo = long[0];\n            var labelPropertyInfos = label;\n            var indicatorPropertyInfos = indicator;\n            var currColumn = 0;\n            var latColumn = currColumn++;\n            var longColumn = currColumn++;\n            var labelColumns = _.range(currColumn, currColumn + labelPropertyInfos.length);\n            currColumn += labelPropertyInfos.length;\n            var indicatorColumns = _.range(currColumn, currColumn + indicatorPropertyInfos.length);\n            currColumn += indicatorPropertyInfos.length;\n            var dimensions = [];\n            var labels = [];\n            var indicators = [];\n            var group = [];\n            dimensions.push(latPropertyInfo);\n            dimensions.push(longPropertyInfo);\n            for (var i = 0; i < labelPropertyInfos.length; i++) {\n                if (labelPropertyInfos[i].groupBy) {\n                    group.push(labelPropertyInfos[i]);\n                } else {\n                    labels.push(labelPropertyInfos[i]);\n                }\n            }\n            for (var j = 0; j < indicatorPropertyInfos.length; j++) {\n                if (indicatorPropertyInfos[j].groupBy) {\n                    group.push(indicatorPropertyInfos[j]);\n                } else {\n                    indicators.push(indicatorPropertyInfos[j]);\n                }\n            }\n\n            var selection = {\n                dimension: dimensions,\n                multidimension: labels.concat(indicators),\n                group: group\n            };\n            var location = configuration.datasourceLocation;\n            var graph = configuration.datasourceGraph;\n            return dataModule.parse(location, graph, selection).then(function (data) {\n                console.log(\"CONVERTED INPUT DATA FOR MAP VISUALIZATION\");\n                console.dir(data);\n                var minLat = 90;\n                var maxLat = -90;\n                var minLong = 180;\n                var maxLong = -180;\n                var minHue = 0;\n                var maxHue = 120;\n                var minIndicatorValues = [];\n                var maxIndicatorValues = [];\n                for (var j = 0; j < indicatorColumns.length; j++) {\n                    var minIndicatorValue = Number.MAX_VALUE;\n                    var maxIndicatorValue = Number.MIN_VALUE;\n                    for (var i = 1; i < data.length; ++i) {\n                        var row = data[i];\n                        var indicatorColumn = indicatorColumns[j]; // spaltenindex\n                        var indicatorValue = row[indicatorColumn];\n                        if (minIndicatorValue > indicatorValue) {\n                            minIndicatorValue = indicatorValue;\n                        }\n                        if (maxIndicatorValue < indicatorValue) {\n                            maxIndicatorValue = indicatorValue;\n                        }\n                    }\n                    minIndicatorValues.push(minIndicatorValue);\n                    maxIndicatorValues.push(maxIndicatorValue);\n                }\n\n                for (var k = 1; k < data.length; ++k) {\n                    var row_ = data[k];\n                    var lat = parseFloat(row_[latColumn]);\n                    var long = parseFloat(0.0 + row_[longColumn]);\n                    if (!lat || !long) {\n                        console.warn(\"No lat or long in row:\");\n                        console.dir(row_);\n                        continue;\n                    }\n                    minLat = Math.min(minLat, lat);\n                    maxLat = Math.max(maxLat, lat);\n                    minLong = Math.min(minLong, long);\n                    maxLong = Math.max(maxLong, long);\n                }\n\n                if (indicatorColumns.length === 1) {\n                    var iColumn = indicatorColumns[0];\n\n                    var columnsHeaders = data[0];\n                    var dataLayerOptions = {\n                        recordsField: \"features\",\n                        latitudeField: columnsHeaders[0],\n                        longitudeField: columnsHeaders[1],\n                        locationMode: L.LocationModes.LATLNG,\n                        displayOptions: {},\n                        layerOptions: {\n                            numberOfSides: 4,\n                            radius: 10,\n                            weight: 1,\n                            color: \"#000\",\n                            opacity: 0.2,\n                            stroke: true,\n                            fillOpacity: 0.7,\n                            dropShadow: true,\n                            gradient: true\n                        },\n                        tooltipOptions: {\n                            iconSize: new L.Point(90, 76),\n                            iconAnchor: new L.Point(-4, 76)\n                        },\n                        onEachRecord: function onEachRecord(layer, record) {\n                            var $html = $(L.HTMLUtils.buildTable(record));\n                            layer.bindPopup($html.wrap(\"<div/>\").parent().html(), {\n                                minWidth: 400,\n                                maxWidth: 400\n                            });\n                        }\n                    };\n\n                    var minIValue = minIndicatorValues[0];\n                    var maxIValue = maxIndicatorValues[0];\n                    console.log(\"Min/max indicator value: \" + minIValue + \" -> \" + maxIValue);\n\n                    var indicatorColorFunction = new L.HSLHueFunction(new L.Point(minIValue, 50), new L.Point(maxIValue, -25), { outputSaturation: \"100%\", outputLuminosity: \"25%\" });\n                    var indicatorFillColorFunction = new L.HSLHueFunction(new L.Point(minIValue, 50), new L.Point(maxIValue, -25), { outputSaturation: \"100%\", outputLuminosity: \"50%\" });\n\n                    var columnName = columnsHeaders[iColumn];\n                    dataLayerOptions.displayOptions[columnName] = {\n                        displayName: columnName,\n                        color: indicatorColorFunction,\n                        fillColor: indicatorFillColorFunction,\n                        radius: 5\n                    };\n\n                    var inputData = {\n                        features: util['default'].createRows(data)\n                    };\n                    var dataLayer = new L.DataLayer(inputData, dataLayerOptions);\n                    console.log(\"Map input data: \");\n                    console.dir(inputData);\n                    map.addLayer(dataLayer);\n                } else {\n                    for (var l = 1; l < data.length; ++l) {\n                        var row__ = data[l];\n                        var lat_ = parseFloat(row__[latColumn]);\n                        var long_ = parseFloat(0.0 + row__[longColumn]);\n                        if (!lat_ || !long_) {\n                            console.warn(\"No lat or long in row:\");\n                            console.dir(row__);\n                            continue;\n                        }\n                        var label = labelColumns.length >= 0 ? row__[labelColumns[0]] : \"\";\n                        console.log(\"LatLong: \" + lat_ + \", \" + long_);\n                        var marker;\n                        if (indicatorColumns.length > 0) {\n                            var markeroptions = {\n                                data: {},\n                                chartOptions: {},\n                                displayOptions: {},\n                                weight: 1,\n                                color: \"#000000\"\n                            };\n                            for (var t = 0; t < indicatorColumns.length; t++) {\n                                var iColumn_ = indicatorColumns[t]; // spaltenindex\n                                var iValue = row__[iColumn_];\n                                var name = \"datapoint\" + t;\n                                console.log(\"indicator [t]: \" + iColumn_ + \" name: \" + name + \" value: \" + iValue);\n                                markeroptions.data[name] = iValue;\n                                markeroptions.chartOptions[name] = {\n                                    color: \"hsl(240,100%,55%)\",\n                                    fillColor: \"hsl(240,80%,55%)\",\n                                    minValue: 0,\n                                    maxValue: maxIndicatorValues[j],\n                                    maxHeight: 20,\n                                    title: label,\n                                    displayText: function displayText(value) {\n                                        return value.toFixed(2);\n                                    }\n                                };\n                                markeroptions.displayOptions[name] = {\n                                    color: new L.HSLHueFunction(new L.Point(0, minHue), new L.Point(100, maxHue), { outputSaturation: \"100%\", outputLuminosity: \"25%\" }),\n                                    fillColor: new L.HSLHueFunction(new L.Point(0, minHue), new L.Point(100, maxHue), { outputSaturation: \"100%\", outputLuminosity: \"50%\" })\n                                };\n                            }\n                            console.dir(markeroptions);\n                            marker = new L.MapMarker(new L.LatLng(lat_, long_), markeroptions);\n                        } else {\n                            var moptions = {\n                                title: label\n                            };\n                            marker = new L.Marker(new L.LatLng(lat_, long_), moptions);\n                        }\n                        marker.addTo(map);\n                        console.log(\"Point: [\" + lat_ + \", \" + long_ + \", \" + label + \"]\");\n                    }\n                }\n                console.log(\"Bounds: [\" + minLat + \", \" + maxLat + \"], [\" + minLong + \", \" + maxLong + \"]\");\n                if (minLat !== null && minLong !== null && maxLat !== null && maxLong !== null) {\n                    map.fitBounds([[minLat, minLong], [maxLat, maxLong]]);\n                }\n            });\n        }\n\n        function get_SVG() {\n            return \"\";\n        }\n\n        function export_as_PNG() {\n            var dfd = new $.Deferred();\n            leafletImage(map, function (err, canvas) {\n                var pngURL = canvas.toDataURL();\n                var downloadURL = pngURL.replace(/^data:image\\/png/, \"data:application/octet-stream\");\n                dfd.resolve(downloadURL);\n            });\n            return dfd.promise();\n        }\n\n        return {\n            export_as_PNG: export_as_PNG,\n            get_SVG: get_SVG,\n            draw: draw\n        };\n    })();\n\n    exports['default'] = map;\n\n});","define('linda-vis-fe/utils/pie-chart', ['exports', 'linda-vis-fe/utils/util', 'linda-vis-fe/utils/export-visualization'], function (exports, util, exportVis) {\n\n    'use strict';\n\n    var piechart = (function () {\n\n        var seriesHeaders = [];\n        var series = [];\n\n        function draw(configuration, visualisationContainerID) {\n            console.log(\"### INITIALIZE VISUALISATION - PIE CHART\");\n\n            var container = $(\"#\" + visualisationContainerID);\n            container.empty();\n\n            var measure = configuration[\"Measure\"];\n            var slice = configuration[\"Slices\"];\n\n            if (!(configuration.dataModule && configuration.datasourceLocation && measure && slice)) {\n                return $.Deferred().resolve().promise();\n            }\n\n            if (measure.length === 0 || slice.length === 0) {\n                return $.Deferred().resolve().promise();\n            }\n\n            var dataModule = configuration.dataModule;\n            var location = configuration.datasourceLocation;\n            var graph = configuration.datasourceGraph;\n\n            var selection = {\n                dimension: measure,\n                multidimension: slice\n\n            };\n\n            console.log(\"VISUALIZATION SELECTION FOR PIE CHART:\");\n            console.dir(selection);\n\n            var svg = dimple.newSvg(\"#\" + visualisationContainerID, container.width(), container.height());\n\n            return dataModule.parse(location, graph, selection).then(function (inputData) {\n                seriesHeaders = inputData[0];\n                series = util['default'].createRows(inputData);\n                console.log(\"GENERATE INPUT DATA FORMAT FOR PIE CHART\");\n                console.dir(series);\n\n                var chart = new dimple.chart(svg, series);\n                chart.addMeasureAxis(\"p\", seriesHeaders[0]);\n                chart.addSeries(seriesHeaders.slice(1), dimple.plot.pie);\n                chart.addLegend(\"10%\", \"5%\", \"80%\", 20, \"right\");\n\n                //tooltip\n                if (configuration[\"Tooltip\"] === false) {\n                    chart.addSeries(series, dimple.plot.pie).addEventHandler(\"mouseover\", function () {});\n                }\n\n                chart.draw();\n            });\n        }\n\n        function export_as_PNG() {\n            return exportVis['default'].export_PNG();\n        }\n\n        function export_as_SVG() {\n            return exportVis['default'].export_SVG();\n        }\n\n        function get_SVG() {\n            return exportVis['default'].get_SVG();\n        }\n\n        return {\n            export_as_PNG: export_as_PNG,\n            export_as_SVG: export_as_SVG,\n            get_SVG: get_SVG,\n            draw: draw\n        };\n    })();\n\n    exports['default'] = piechart;\n\n});","define('linda-vis-fe/utils/scatter-chart', ['exports', 'linda-vis-fe/utils/util', 'linda-vis-fe/utils/export-visualization'], function (exports, util, exportVis) {\n\n    'use strict';\n\n    var scatterchart = (function () {\n        var seriesHeaders = [];\n        var data = [];\n\n        function draw(configuration, visualisationContainerID) {\n            console.log(\"### INITIALIZE VISUALISATION - COLUMN CHART\");\n\n            var container = $(\"#\" + visualisationContainerID);\n            container.empty();\n\n            var xAxis = configuration[\"Horizontal Axis\"];\n            var yAxis = configuration[\"Vertical Axis\"];\n            var group = configuration[\"Groups\"];\n\n            if (!(configuration.dataModule && configuration.datasourceLocation && xAxis && yAxis)) {\n                return $.Deferred().resolve().promise();\n            }\n\n            if (xAxis.length === 0 || yAxis.length === 0) {\n                return $.Deferred().resolve().promise();\n            }\n\n            var dataModule = configuration.dataModule;\n            var location = configuration.datasourceLocation;\n            var graph = configuration.datasourceGraph;\n            var gridlines = configuration.Gridlines;\n            var tooltip = configuration.Tooltip;\n            var hLabel = configuration[\"Horizontal Label\"];\n            var vLabel = configuration[\"Vertical Label\"];\n\n            var selection = {\n                dimension: [],\n                multidimension: xAxis.concat(yAxis).concat(group),\n                gridlines: gridlines,\n                tooltip: tooltip,\n                hLabel: hLabel,\n                vLabel: vLabel\n            };\n\n            console.log(\"VISUALIZATION SELECTION FOR COLUMN CHART:\");\n            console.dir(selection);\n\n            var svg = dimple.newSvg(\"#\" + visualisationContainerID, container.width(), container.height());\n\n            return dataModule.parse(location, graph, selection).then(function (inputData) {\n                console.log(\"GENERATE INPUT DATA FORMAT FOR COLUMN CHART - INPUT DATA\");\n                console.dir(inputData);\n                seriesHeaders = inputData[0];\n                data = util['default'].createRows(inputData);\n                for (var i = 0; i < data.length; i++) {\n                    data[i][\"id\"] = \"id\" + i;\n                }\n\n                console.log(\"GENERATE INPUT DATA FORMAT FOR COLUMN CHART - OUTPUT DATA\");\n                console.dir(data);\n\n                var chart = new dimple.chart(svg, data);\n\n                var xAxisName = seriesHeaders[0];\n                var yAxisName = seriesHeaders[1];\n\n                var groupAxisName;\n                if (group.length > 0) {\n                    groupAxisName = seriesHeaders[2];\n                }\n\n                var x = chart.addMeasureAxis(\"x\", xAxisName);\n                var y = chart.addMeasureAxis(\"y\", yAxisName);\n\n                var series = [\"id\"];\n\n                if (groupAxisName) {\n                    series.push(groupAxisName);\n                }\n\n                console.log(\"SERIES:\");\n                console.dir(series);\n\n                chart.addSeries(series, dimple.plot.bubble);\n                chart.addLegend(\"50%\", \"10%\", 500, 20, \"right\");\n\n                //ticks\n                x.ticks = selection.gridlines;\n                y.ticks = selection.gridlines;\n                //titles\n                if (selection.hLabel === \"\" || selection.hLabel === \"Label\") {\n                    selection.hLabel = seriesHeaders[0];\n                }\n                if (selection.vLabel === \"\" || selection.vLabel === \"Label\") {\n                    selection.vLabel = seriesHeaders[1];\n                }\n                x.title = selection.hLabel;\n                y.title = selection.vLabel;\n                //tooltip\n                if (selection.tooltip === false) {\n                    chart.addSeries(series, dimple.plot.bubble).addEventHandler(\"mouseover\", function () {});\n                }\n\n                chart.draw();\n            });\n        }\n\n        function export_as_PNG() {\n            return exportVis['default'].export_PNG();\n        }\n\n        function export_as_SVG() {\n            return exportVis['default'].export_SVG();\n        }\n\n        function get_SVG() {\n            return exportVis['default'].get_SVG();\n        }\n\n        return {\n            export_as_PNG: export_as_PNG,\n            export_as_SVG: export_as_SVG,\n            get_SVG: get_SVG,\n            draw: draw\n        };\n    })();\n\n    exports['default'] = scatterchart;\n\n});","define('linda-vis-fe/utils/sparql-data-module', ['exports', 'ember', 'linda-vis-fe/utils/util'], function (exports, Ember, util) {\n\n    'use strict';\n\n    var sparql_data_module = (function () {\n\n        function sparqlProxyQuery(endpoint, query) {\n            var promise = Ember['default'].$.getJSON(\"http://\" + window.location.hostname + \":3002/sparql-proxy/\" + encodeURIComponent(endpoint) + \"/\" + encodeURIComponent(query));\n            return promise.then(function (result) {\n                console.log(\"SPARQL DATA MODULE - SPARQL QUERY RESULT\");\n                console.dir(result);\n                return result;\n            });\n        }\n\n        function simplifyURI(uri) {\n            var splits = uri.split(/[#/:]/);\n            return splits[splits.length - 1];\n        }\n\n        function queryClasses(endpoint, graph) {\n            var query = \"\";\n\n            query += \"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\";\n            query += \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\";\n\n            query += \"SELECT DISTINCT ?class ?classLabel \";\n            query += \"WHERE \";\n            query += \"{\";\n            query += \" GRAPH <\" + graph + \">\";\n            query += \" {\";\n            query += \"  SELECT ?class ?classLabel COUNT(?x) as ?classSize\";\n            query += \"  WHERE\";\n            query += \"  {\";\n            query += \"   ?x rdf:type ?class .\";\n            query += \"   ?x ?property ?y .\";\n            query += \"   OPTIONAL\";\n            query += \"   {\";\n            query += \"    ?class rdfs:label ?classLabel .\";\n            query += \"   }\";\n            query += \"  }\";\n            query += \" }\";\n            query += \"}\";\n            query += \"ORDER BY DESC(?classSize)\";\n\n            console.log(\"SPARQL DATA MODULE - CLASSES QUERY\");\n            console.dir(query);\n\n            return sparqlProxyQuery(endpoint, query).then(function (result) {\n                var classes = [];\n                for (var i = 0; i < result.length; i++) {\n                    var classURI = result[i][\"class\"].value;\n\n                    var classLabel = (result[i].classLabel || {}).value;\n                    if (!classLabel) {\n                        classLabel = simplifyURI(classURI);\n                    }\n\n                    var dataInfo = {\n                        id: classURI,\n                        label: classLabel,\n                        type: \"Class\",\n                        grandchildren: true\n                    };\n\n                    classes.push(dataInfo);\n                }\n                return classes;\n            });\n        }\n\n        function predictRDFPropertyRole(propertyURI, propertyTypes) {\n            switch (propertyURI) {}\n            for (var i = 0; i < propertyTypes.length; i++) {\n                var propertyType = propertyTypes[i];\n                switch (propertyType) {\n                    case \"http://purl.org/linked-data/cube#DimensionProperty\":\n                        return \"Domain\";\n                    case \"http://purl.org/linked-data/cube#MeasureProperty\":\n                        return \"Range\";\n                }\n            }\n            // undefined\n            return;\n        }\n\n        function queryProperties(endpoint, graph, _class, _properties) {\n            var query = \"\";\n\n            query += \"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\\n\";\n            query += \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n\";\n\n            query += \"SELECT DISTINCT ?property \";\n            query += \" SAMPLE(?propertyLabel_) as ?propertyLabel \";\n            query += \" GROUP_CONCAT(STR(?propertyType) ; separator=\\\" \\\") as ?propertyTypes \";\n            query += \" SAMPLE(?propertyValue) as ?sampleValue \";\n            query += \" COUNT(?grandchildProperty) as ?numChildren\\n\";\n            query += \"WHERE\\n\";\n            query += \"{\\n\";\n            query += \" GRAPH <\" + graph + \">\\n\";\n            query += \" {\\n\";\n            query += \"  ?x0 rdf:type <\" + _class.id + \"> .\\n\";\n\n            for (var i = 0; i < _properties.length; i++) {\n                query += \"  ?x\" + i + \" <\" + _properties[i].id + \"> ?x\" + (i + 1) + \" .\\n\";\n            }\n\n            query += \"  ?x\" + _properties.length + \" ?property ?propertyValue .\\n\";\n            query += \"  OPTIONAL\\n\";\n            query += \"  {\\n\";\n            query += \"   ?property rdfs:label ?propertyLabel_ .\\n\";\n            query += \"  }\\n\";\n            query += \"  OPTIONAL\\n\";\n            query += \"  {\\n\";\n            query += \"   ?property rdf:type ?propertyType .\\n\"; // For predicting roles, e.g. DimensionProperty\n            query += \"  }\\n\";\n            query += \"  OPTIONAL\\n\";\n            query += \"  {\\n\";\n            query += \"   ?propertyValue ?grandchildProperty ?grandchildValue.\\n\";\n            query += \"  }\\n\";\n            query += \" }\\n\";\n            query += \"} GROUP BY ?property\";\n\n            console.log(\"SPARQL DATA MODULE - PROPERTIES QUERY: \");\n            console.dir(query);\n\n            return sparqlProxyQuery(endpoint, query).then(function (results) {\n                var properties = [];\n\n                for (var i = 0; i < results.length; i++) {\n                    var result = results[i];\n                    var propertyURI = result.property.value;\n                    var propertyLabel = (result.propertyLabel || {}).value;\n                    var propertyTypesString = (result.propertyTypes || {}).value;\n                    var propertyTypes;\n                    if (propertyTypesString) {\n                        propertyTypes = propertyTypesString.split(\" \");\n                    } else {\n                        propertyTypes = [];\n                    }\n                    var grandchildren = (result.numChildren || {}).value;\n                    var sampleValueType = (result.sampleValue || {}).type;\n                    var sampleValue = (result.sampleValue || {}).value;\n\n                    if (!propertyLabel) {\n                        propertyLabel = simplifyURI(propertyURI);\n                    }\n\n                    var scaleOfMeasurement;\n                    switch (sampleValueType) {\n                        case \"literal\":\n                        case \"typed-literal\":\n                            scaleOfMeasurement = predictRDFPropertySOM(propertyURI);\n\n                            if (!scaleOfMeasurement) {\n                                var datatype = result.sampleValue.datatype;\n                                if (datatype) {\n                                    scaleOfMeasurement = predictRDFDatatypeSOM(datatype);\n                                } else {\n                                    var parsedSampleValue = util['default'].toScalar(sampleValue);\n                                    scaleOfMeasurement = util['default'].predictValueSOM(parsedSampleValue);\n                                }\n                            }\n                            break;\n                        case \"uri\":\n                        case \"bnode\":\n                            scaleOfMeasurement = \"Resource\";\n                            break;\n                        default:\n                            scaleOfMeasurement = \"Nothing\";\n                            break;\n                    }\n\n                    var dataInfo = {\n                        id: propertyURI,\n                        label: propertyLabel,\n                        grandchildren: parseInt(grandchildren) > 0 ? true : false,\n                        role: predictRDFPropertyRole(propertyURI, propertyTypes),\n                        special: _.contains(propertyTypes, \"http://linda-project.eu/linda-visualization#SpecialProperty\"),\n                        type: scaleOfMeasurement\n                    };\n\n                    properties.push(dataInfo);\n                }\n\n                return properties;\n            });\n        }\n\n        function predictRDFPropertySOM(propertyURI) {\n            switch (propertyURI) {\n                case \"http://www.w3.org/2003/01/geo/wgs84_pos#lat\":\n                    return \"Geographic Latitude\";\n                case \"http://www.w3.org/2003/01/geo/wgs84_pos#long\":\n                    return \"Geographic Longitude\";\n                default:\n                    return null;\n            }\n        }\n\n        function predictRDFDatatypeSOM(datatype) {\n            switch (datatype) {\n                case \"http://www.w3.org/2001/XMLSchema#float\":\n                case \"http://www.w3.org/2001/XMLSchema#double\":\n                case \"http://www.w3.org/2001/XMLSchema#decimal\":\n                case \"http://www.w3.org/2001/XMLSchema#integer\":\n                case \"http://www.w3.org/2001/XMLSchema#nonPositiveInteger\":\n                case \"http://www.w3.org/2001/XMLSchema#negativeInteger\":\n                case \"http://www.w3.org/2001/XMLSchema#long\":\n                case \"http://www.w3.org/2001/XMLSchema#int\":\n                case \"http://www.w3.org/2001/XMLSchema#short\":\n                case \"http://www.w3.org/2001/XMLSchema#byte\":\n                case \"http://www.w3.org/2001/XMLSchema#nonNegativeInteger\":\n                case \"http://www.w3.org/2001/XMLSchema#unsignedLong\":\n                case \"http://www.w3.org/2001/XMLSchema#unsignedInt\":\n                case \"http://www.w3.org/2001/XMLSchema#unsignedShort\":\n                case \"http://www.w3.org/2001/XMLSchema#unsignedByte\":\n                case \"http://www.w3.org/2001/XMLSchema#positiveInteger\":\n                    return \"Ratio\";\n                case \"http://www.w3.org/2001/XMLSchema#dateTime\":\n                case \"http://www.w3.org/2001/XMLSchema#date\":\n                case \"http://www.w3.org/2001/XMLSchema#gYear\":\n                case \"http://www.w3.org/2001/XMLSchema#gYearMonth\":\n                    return \"Interval\";\n                // case \"http://www.w3.org/2001/XMLSchema#string\":\n                default:\n                    return \"Nominal\";\n            }\n        }\n\n        function parse(endpoint, graph, selection) {\n            var dimension = selection.dimension;\n            var multidimension = selection.multidimension;\n\n            return queryInstances(endpoint, graph, dimension.concat(multidimension));\n        }\n\n        function queryInstances(endpoint, graph, properties) {\n            var columnHeaders = [];\n            var optionals = \"\";\n            var selectVariables = \"\";\n            var selectedVariablesArray = [];\n            var class_ = properties[0].parent[0].id;\n            var path = [];\n\n            var nameExists = {};\n\n            for (var i = 0; i < properties.length; i++) {\n                var property = properties[i];\n                path = property.parent;\n\n                selectVariables += \" ?z\" + i;\n                var header;\n                if (!nameExists[property.label]) {\n                    header = property.label;\n                } else {\n                    header = property.label + \" \" + i;\n                }\n                nameExists[header] = true;\n                columnHeaders.push(header);\n                selectedVariablesArray.push(\"z\" + i);\n\n                optionals += \" OPTIONAL \";\n                optionals += \" { \";\n                for (var j = 1; j < path.length; j++) {\n                    var x = simplifyURI(path[j - 1].id) + (j - 1);\n                    if (j < path.length - 1) {\n                        var variable_t = simplifyURI(path[j].id) + j;\n                        optionals += \"\\n\" + \"?\" + x + \" <\" + path[j].id + \"> ?\" + variable_t + \".\\n\";\n                    } else {\n                        optionals += \"\\n\" + \"?\" + x + \" <\" + path[j].id + \"> ?z\" + i + \".\\n\";\n                    }\n                }\n                optionals += \" } \";\n            }\n\n            var y = simplifyURI(path[0].id) + \"0\";\n\n            var query = \"\\n\" + \"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\\n\" + \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n\" + \"SELECT DISTINCT \" + selectVariables + \"\\n\" + \"WHERE {\\n\" + \"GRAPH <\" + graph + \"> {\\n\" + \"?\" + y + \" rdf:type <\" + class_ + \">.\\n\" + optionals + \"\\n\" + \"}\\n\" + \"}\";\n\n            console.log(\"SPARQL DATA MODULE - DATA QUERY FOR VISUALIZATION CONFIGURATION\");\n            console.dir(query);\n\n            return sparqlProxyQuery(endpoint, query).then(function (queryResult) {\n                return convert(queryResult, columnHeaders, selectedVariablesArray);\n            });\n        }\n\n        function convert(queryResults, columnHeaders, selectedVariablesArray) {\n            var result = [];\n            result.push(columnHeaders);\n            for (var i = 0; i < queryResults.length; i++) {\n                var queryResult = queryResults[i];\n                var record = [];\n                for (var j = 0; j < selectedVariablesArray.length; j++) {\n                    var p = selectedVariablesArray[j];\n                    var binding = queryResult[p];\n                    var val = resultToScalar(binding);\n                    if (_.isUndefined(val)) {\n                        record.push(null);\n                    } else {\n                        record.push(val);\n                    }\n                }\n                result.push(record);\n            }\n\n            console.log(\"SPARQL DATA MODULE - CONVERSION RESULT\");\n            console.dir(result);\n            return result;\n        }\n\n        /*\n         * Takes a vexport default sparql_data_module;ariable binding from a json sparql result and converts it to a scalar\n         */\n        function resultToScalar(binding) {\n            if (!binding) {\n                return null;\n            }\n            var value = binding.value;\n            var type = binding.type;\n            switch (type) {\n                case \"literal\":\n                case \"typed-literal\":\n                    var datatype = binding.datatype;\n                    if (datatype) {\n                        var parsedValue = typedLiteralToScalar(value, datatype);\n                        if (typeof parsedValue !== \"undefined\") {\n                            return parsedValue;\n                        }\n                    }\n\n                    // if no (known) datatype is given, try same parsing algorithm as for CSV\n                    return util['default'].toScalar(value);\n                case \"uri\":\n                case \"bnode\":\n                    return simplifyURI(value);\n                default:\n                    return value;\n            }\n        }\n\n        function typedLiteralToScalar(value, datatype) {\n            switch (datatype) {\n                case \"http://www.w3.org/2001/XMLSchema#float\":\n                case \"http://www.w3.org/2001/XMLSchema#double\":\n                case \"http://www.w3.org/2001/XMLSchema#decimal\":\n                    return parseFloat(value);\n                case \"http://www.w3.org/2001/XMLSchema#integer\":\n                case \"http://www.w3.org/2001/XMLSchema#nonPositiveInteger\":\n                case \"http://www.w3.org/2001/XMLSchema#negativeInteger\":\n                case \"http://www.w3.org/2001/XMLSchema#long\":\n                case \"http://www.w3.org/2001/XMLSchema#int\":\n                case \"http://www.w3.org/2001/XMLSchema#short\":\n                case \"http://www.w3.org/2001/XMLSchema#byte\":\n                case \"http://www.w3.org/2001/XMLSchema#nonNegativeInteger\":\n                case \"http://www.w3.org/2001/XMLSchema#unsignedLong\":\n                case \"http://www.w3.org/2001/XMLSchema#unsignedInt\":\n                case \"http://www.w3.org/2001/XMLSchema#unsignedShort\":\n                case \"http://www.w3.org/2001/XMLSchema#unsignedByte\":\n                case \"http://www.w3.org/2001/XMLSchema#positiveInteger\":\n                    return parseInt(value);\n                case \"http://www.w3.org/2001/XMLSchema#gYear\":\n                    var numberRegex = /\\d+/;\n                    var firstNumber = numberRegex.exec(value);\n                    var yearDateString;\n                    if (firstNumber && firstNumber.length >= 4) {\n                        yearDateString = firstNumber + \"-01-01\";\n                    } else {\n                        // No idea what this is, maybe JavaScript knows...\n                        yearDateString = value;\n                    }\n                    return new Date(yearDateString).getFullYear();\n                case \"http://www.w3.org/2001/XMLSchema#gYearMonth\":\n                    var twoNumbersWithHyphenRegex = /\\d+-\\d+/;\n                    var firstTwoNumbers = twoNumbersWithHyphenRegex.exec(value);\n                    var yearMonthDateString;\n                    if (firstTwoNumbers && firstTwoNumbers.length >= 4) {\n                        yearMonthDateString = firstTwoNumbers + \"-01\";\n                    } else {\n                        yearMonthDateString = value;\n                    }\n                    //prevent long strings\n                    yearMonthDateString = Date(yearMonthDateString);\n                    return yearMonthDateString.getFullYear() + \"-\" + (yearMonthDateString.getMonth() + 1);\n                case \"http://www.w3.org/2001/XMLSchema#dateTime\":\n                case \"http://www.w3.org/2001/XMLSchema#date\":\n                    return new Date(value);\n                case \"http://www.w3.org/2001/XMLSchema#string\":\n                    // Can plain literals be returned as xsd:string in newer\n                    // versions of RDF/SPARQL? If so, uses toScalar here to handle\n                    // datasets with missing types\n                    return value;\n                default:\n                    return;\n            }\n        }\n\n        return {\n            queryClasses: queryClasses,\n            queryProperties: queryProperties,\n            queryInstances: queryInstances,\n            parse: parse\n        };\n    })();\n\n    exports['default'] = sparql_data_module;\n\n    // TODO: Are there properties that always have the role of a domain or a range?\n\n});","define('linda-vis-fe/utils/table-data-module', ['exports', 'linda-vis-fe/utils/csv-data-module', 'linda-vis-fe/utils/sparql-data-module'], function (exports, csv_data_module, sparql_data_module) {\n\n    'use strict';\n\n    var table_data_module = (function () {\n        var list = [];\n        function getContent(selection, datasource) {\n            var _location = datasource.location;\n            var _graph = datasource.graph;\n            var _format = datasource.format;\n            var data_module = getDataModule(_format);\n\n            console.log(\"TABLE DATA MODULE - SELECTION:\");\n            console.dir(selection);\n\n            return data_module.queryInstances(_location, _graph, selection);\n        }\n\n        function getColumns(list) {\n            var columns = [];\n            for (var i = 0; i < list.length; i++) {\n                columns.push({\n                    title: list[i].label\n                });\n            }\n            return columns;\n        }\n        function getDataModule(format) {\n            switch (format) {\n                case \"csv\":\n                    return csv_data_module['default'];\n                case \"rdf\":\n                    return sparql_data_module['default'];\n            }\n            console.error(\"Unknown data format '\" + format + \"'\");\n            return null;\n        }\n\n        return {\n            list: list,\n            getContent: getContent,\n            getColumns: getColumns\n        };\n    })();\n\n    exports['default'] = table_data_module;\n\n});","define('linda-vis-fe/utils/template-mapping', ['exports'], function (exports) {\n\n    'use strict';\n\n    var templateMapping = (function () {\n\n        function templateMapping(editObject) {\n            //the input object might be the result of the recommendation algorithm\n            //or the JSON with changed template data, i.e. {layoutOptions:{height:500}}\n            console.log(\"CREATING TEMPLATE MAPPING ...\");\n\n            var resultMapping = {\n                layoutOptions: {},\n                structureOptions: {}\n            };\n\n            if (editObject) {\n                //retrieving the fields\n                var layoutOptions = editObject.get(\"layoutOptions\");\n                var structureOptions = editObject.get(\"structureOptions\");\n\n                //invoking an appropriate template for a dimension parameter\n                resultMapping[\"layoutOptions\"] = mapping(layoutOptions);\n\n                //invoking an appropriate template for a tuning parameter\n                resultMapping[\"structureOptions\"] = mapping(structureOptions);\n            }\n\n            return resultMapping;\n        }\n\n        function mapping(options) {\n            var result = {};\n\n            //Assuming there is a baseofmappings {option: template}\n            var mapDB = {\n                \"dimension\": \"dimension-area\",\n                \"color\": \"tuning-bgc\",\n                \"string\": \"textField\",\n                \"boolean\": \"tuning-check\",\n                \"number\": \"tuning-numinput\",\n                \"nonNegativeInteger\": \"tuning-numinput\",\n                \"integer\": \"tuning-numinput\"\n            };\n\n            if (options !== null) {\n                for (var prop in options) {\n                    if (options.hasOwnProperty(prop)) {\n                        var option = options[prop];\n                        result[prop] = {\n                            template: mapDB[option.type],\n                            value: option.value,\n                            label: option.optionName,\n                            metadata: option.metadata,\n                            minCardinality: option.minCardinality,\n                            maxCardinality: option.maxCardinality\n                        };\n                    }\n                }\n            }\n\n            return result;\n        }\n\n        return {\n            templateMapping: templateMapping\n        };\n    })();\n\n    exports['default'] = templateMapping;\n\n});","define('linda-vis-fe/utils/tree-selection-data-module', ['exports', 'linda-vis-fe/utils/csv-data-module', 'linda-vis-fe/utils/sparql-data-module'], function (exports, csv_data_module, sparql_data_module) {\n\n    'use strict';\n\n    var treeselection_data_module = (function () {\n        var _location = \"\";\n        var _graph = \"\";\n        var _format = \"\";\n        var _data_module = \"\";\n\n        function initialize(dataInfo) {\n            console.log(\"SELECTION TREE COMPONENT - INITIALIZING TREE\");\n\n            _location = dataInfo.location;\n            _graph = dataInfo.graph;\n            _format = dataInfo.format;\n            _data_module = getDataModule(_format);\n\n            return _data_module.queryClasses(_location, _graph).then(function (data) {\n                return createTreeContent(data);\n            });\n        }\n\n        function restore(dataInfo, previousSelection) {\n            console.log(\"SELECTION TREE COMPONENT - RESTORING TREE\");\n\n            _location = dataInfo.location;\n            _graph = dataInfo.graph;\n            _format = dataInfo.format;\n            _data_module = getDataModule(_format);\n\n            var _selectedClassKey = previousSelection[0].parent[0].id;\n            var _selectedClassTitle = previousSelection[0].parent[0].label;\n\n            return _data_module.queryClasses(_location, _graph).then(function (classes) {\n                var treecontent = createTreeContent(classes);\n                var branch = _.filter(treecontent, function (item) {\n                    if (_.isEqual(item.key, _selectedClassKey)) {\n                        return true;\n                    }\n                });\n\n                branch[0][\"expanded\"] = true;\n                branch[0][\"selected\"] = true;\n                branch[0][\"lazy\"] = false;\n                branch[0][\"children\"] = [];\n                branch[0][\"parent\"] = [{ id: _selectedClassKey, label: _selectedClassTitle }];\n\n                return restoreTreeContent(previousSelection, branch[0]).then(function () {\n                    return treecontent;\n                });\n            });\n        }\n\n        function restoreTreeContent(previousSelection, branch) {\n            console.log(\"SELECTION TREE COMPONENT - RESTORING TREE CONTENT\");\n\n            return branch._children.loadChildren(branch.parent).then(function (children) {\n                var promises = [];\n\n                for (var j = 0; j < children.length; j++) {\n                    var child = children[j];\n                    child[\"parent\"] = branch.parent.concat([{ id: child.key, label: child.title }]);\n\n                    for (var i = 0; i < previousSelection.length; i++) {\n                        var selection = previousSelection[i];\n                        var prefix = selection.parent.slice(0, child.parent.length);\n\n                        if (_.isEqual(child.parent, prefix) && selection.parent.length > child.parent.length) {\n                            child[\"expanded\"] = true;\n                            child[\"selected\"] = true;\n                            child[\"lazy\"] = false;\n                            child[\"children\"] = [];\n                            promises.push(restoreTreeContent(previousSelection, child));\n                            break;\n                        } else if (_.isEqual(child.parent, prefix)) {\n                            child[\"selected\"] = true;\n                            child[\"lazy\"] = true;\n                            if (!child.grandchildren) {\n                                child[\"lazy\"] = false;\n                            }\n                        }\n                    }\n                    branch.children.push(child);\n                }\n                return $.when.apply($, promises).then(function (content) {\n                    console.log(\"SELECTION TREE COMPONENT - FINISHED RESTORING TREE CONTENT\");\n                    return content;\n                });\n            });\n        }\n\n        function createTreeContent(data) {\n            console.log(\"SELECTION TREE COMPONENT - CREATING TREE CONTENT\");\n            var treeContent = [];\n\n            for (var i = 0; i < data.length; i++) {\n                var record = data[i];\n                var id = record.id;\n                var label = record.label;\n                var type = record.type;\n                var role = record.role;\n                var special = record.special;\n                var grandchildren = record.grandchildren;\n\n                treeContent.push({\n                    title: label,\n                    key: id,\n                    lazy: grandchildren,\n                    extraClasses: getCSSClass(type),\n                    type: type,\n                    datatype: getDataType(type),\n                    role: role,\n                    special: special,\n                    hideCheckbox: hideCheckbox(type),\n                    _children: {\n                        loadChildren: function loadChildren(node_path) {\n                            var _class = \"\";\n                            var _properties = \"\";\n\n                            if (node_path.length > 1) {\n                                _class = _.first(node_path);\n                                _properties = _.rest(node_path);\n                            } else {\n                                _class = _.last(node_path);\n                                _properties = [];\n                            }\n\n                            return _data_module.queryProperties(_location, _graph, _class, _properties).then(function (data) {\n                                return createTreeContent(data);\n                            });\n                        }\n                    }\n                });\n            }\n\n            return treeContent;\n        }\n\n        function getDataSelection(selection, datasource) {\n            var dataSelection = { datasource: datasource, propertyInfos: [] };\n\n            for (var i = 0; i < selection.length; i++) {\n                var record = selection[i];\n                dataSelection[\"propertyInfos\"].push({\n                    key: record.key,\n                    label: record.label,\n                    parent: record.parent,\n                    role: record.role,\n                    special: record.special,\n                    type: record.type,\n                    datatype: record.datatype\n                });\n            }\n\n            return dataSelection;\n        }\n\n        function getCSSClass(record) {\n            switch (record) {\n                case \"Ratio\":\n                    return \"treenode-number-label\";\n                case \"Interval\":\n                    return \"treenode-date-label\";\n                case \"Nominal\":\n                    return \"treenode-text-label\";\n                case \"Geographic Latitude\":\n                case \"Geographic Longitude\":\n                    return \"treenode-spatial-label\";\n                case \"Class\":\n                    return \"treenode-class-label\";\n                case \"Resource\":\n                case \"Nothing\":\n                    return \"treenode-resource-label\";\n            }\n            console.error(\"Unknown type of record  '\" + record + \"'\");\n            return null;\n        }\n\n        function getDataType(record) {\n            switch (record) {\n                case \"Ratio\":\n                    return \"Number\";\n                case \"Interval\":\n                    return \"Date\";\n                case \"Ordinal\":\n                    return \"Ordinal\";\n                case \"Nominal\":\n                    return \"String\";\n                case \"Angular\":\n                    return \"Angle\";\n                case \"Geographic Latitude\":\n                case \"Geographic Longitude\":\n                    return \"Spatial\";\n                case \"Class\":\n                case \"Resource\":\n                case \"Nothing\":\n                    return null;\n            }\n            console.error(\"Unknown data type of record  '\" + record + \"'\");\n            return null;\n        }\n\n        function hideCheckbox(record) {\n            switch (record) {\n                case \"Ratio\":\n                case \"Interval\":\n                case \"Nominal\":\n                case \"Angular\":\n                case \"Geographic Latitude\":\n                case \"Geographic Longitude\":\n                case \"Class\":\n                    return false;\n                case \"Resource\":\n                case \"Nothing\":\n                    return true;\n            }\n            console.error(\"Unknown category '\" + record + \"'\");\n            return null;\n        }\n\n        function getDataModule(format) {\n            switch (format) {\n                case \"csv\":\n                    return csv_data_module['default'];\n                case \"rdf\":\n                    return sparql_data_module['default'];\n            }\n            console.error(\"Unknown data format '\" + format + \"'\");\n            return null;\n        }\n\n        return {\n            initialize: initialize,\n            restore: restore,\n            getDataSelection: getDataSelection\n        };\n    })();\n\n    exports['default'] = treeselection_data_module;\n\n});","define('linda-vis-fe/utils/util', ['exports'], function (exports) {\n\n    'use strict';\n\n    var util = (function () {\n\n        function transpose(table) {\n            var columnHeaders = table[0];\n            var columns = [];\n            for (var i = 0; i < columnHeaders.length; i++) {\n                var column = [];\n                for (var j = 0; j < table.length; j++) {\n                    column.push(table[j][i]);\n                }\n                columns.push(column);\n            }\n            return columns;\n        }\n\n        function createRows(table) {\n            var rows = [];\n            var columnHeaders = table[0];\n\n            for (var i = 1; i < table.length; i++) {\n                var columns = {};\n                var row = table[i];\n                for (var j = 0; j < row.length; j++) {\n                    var name = columnHeaders[j];\n                    columns[name] = row[j];\n                }\n                rows.push(columns);\n            }\n            return rows;\n        }\n\n        var floatPattern = /^-?[0-9]+\\.[0-9]+$/;\n        var intPattern = /^-?[0-9]+$/;\n\n        function toScalar(value) {\n            if (floatPattern.test(value)) {\n                var float = parseFloat(value);\n                if (isNaN(float)) {\n                    return value;\n                } else {\n                    return float;\n                }\n            } else if (intPattern.test(value)) {\n                var integer = parseInt(value);\n                if (isNaN(integer)) {\n                    return value;\n                } else {\n                    return integer;\n                }\n            } else {\n                var date = Date.parse(value);\n                if (isNaN(date)) {\n                    return value;\n                } else {\n                    return new Date(date).toISOString();\n                }\n            }\n        }\n\n        function predictValueSOM(value) {\n            var jsType = typeof value;\n            switch (jsType) {\n                case \"number\":\n                    return \"Ratio\";\n                case \"object\":\n                    var asString = Object.prototype.toString.call(value);\n                    switch (asString) {\n                        case \"[object Date]\":\n                        case \"[invalid Date]\":\n                            return \"Interval\";\n                    }\n                    break;\n            }\n\n            return \"Nominal\";\n        }\n\n        var cleanAxis = function cleanAxis(axis, interval) {\n            if (axis.shapes.length > 0) {\n                //first tick\n                var del = 0;\n                if (interval > 1) {\n                    axis.shapes.selectAll(\"text\").each(function (d) {\n                        //remove all but nth label\n                        if (del % interval !== 0) {\n                            this.remove();\n                            //delete a corresponding tick\n                            axis.shapes.selectAll(\"line\").each(function (d2) {\n                                if (d === d2) {\n                                    this.remove();\n                                }\n                            });\n                        }\n                        del += 1;\n                    });\n                }\n            }\n        };\n\n        return {\n            predictValueSOM: predictValueSOM,\n            toScalar: toScalar,\n            transpose: transpose,\n            createRows: createRows,\n            cleanAxis: cleanAxis\n        };\n    })();\n\n    exports['default'] = util;\n\n});","define('linda-vis-fe/utils/visualization-registry', ['exports', 'linda-vis-fe/utils/column-chart', 'linda-vis-fe/utils/line-chart', 'linda-vis-fe/utils/area-chart', 'linda-vis-fe/utils/pie-chart', 'linda-vis-fe/utils/bubble-chart', 'linda-vis-fe/utils/scatter-chart', 'linda-vis-fe/utils/map'], function (exports, columnchart, linechart, areachart, piechart, bubblechart, scatterchart, map) {\n\n    'use strict';\n\n    var visualizationRegistry = {\n        getVisualization: function getVisualization(widgetName) {\n            switch (widgetName) {\n                case \"BarChart\":\n                    return columnchart['default'];\n                case \"LineChart\":\n                    return linechart['default'];\n                case \"AreaChart\":\n                    return areachart['default'];\n                case \"PieChart\":\n                    return piechart['default'];\n                case \"BubbleChart\":\n                    return bubblechart['default'];\n                case \"ScatterChart\":\n                    return scatterchart['default'];\n                case \"Map\":\n                    return map['default'];\n            }\n            return null;\n        }\n    };\n\n    exports['default'] = visualizationRegistry;\n\n});","define('linda-vis-fe/views/draw-visualization', ['exports', 'ember', 'linda-vis-fe/utils/sparql-data-module', 'linda-vis-fe/utils/csv-data-module', 'linda-vis-fe/utils/visualization-registry'], function (exports, Ember, sparql_data_module, csv_data_module, vis_registry) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        willAnimateIn: function willAnimateIn() {\n            $.css(\"opacity\", 0);\n        },\n        animateIn: function animateIn(done) {\n            $.fadeTo(500, 1, done);\n        },\n        animateOut: function animateOut(done) {\n            $.fadeTo(500, 0, done);\n        },\n        parentViewDidChange: function parentViewDidChange() {\n            $.hide();\n            $.fadeIn(500);\n        },\n        eventManager: Ember['default'].Object.create({\n            input: function input() {\n                this.triggerAction({\n                    action: \"willAnimateIn\",\n                    target: this\n                });\n            }\n        }),\n        drawVisualization: (function () {\n            var visualization = this.get(\"visualization\");\n            console.log(\"DRAW VISUALIZATION VIEW - DRAW ...\");\n            console.dir(visualization);\n\n            if (!visualization) {\n                return;\n            }\n\n            var config = this.get(\"configurationArray\")[0];\n\n            console.log(\"VISUALIZATION CONFIGURATION\");\n            console.dir(JSON.stringify(config));\n\n            if (!config) {\n                return;\n            }\n\n            var dataselection = visualization.get(\"dataselection\");\n            var datasource = dataselection.get(\"datasource\");\n            var format = datasource.format;\n            config.datasourceLocation = datasource.location;\n            config.datasourceGraph = datasource.graph;\n\n            switch (format) {\n                case \"rdf\":\n                    config.dataModule = sparql_data_module['default'];\n                    break;\n                case \"csv\":\n                    config.dataModule = csv_data_module['default'];\n                    break;\n                default:\n                    console.error(\"Unknown DS format: \" + format);\n                    return;\n            }\n\n            var name = visualization.get(\"visualizationName\");\n            var visualization_ = vis_registry['default'].getVisualization(name);\n            var self = this;\n\n            var element = this.get(\"element\");\n            if (!element) {\n                return;\n            }\n\n            try {\n                visualization_.draw(config, element.id).then(function () {\n                    var svg = visualization_.get_SVG();\n                    self.set(\"visualizationSVG\", svg);\n                });\n            } catch (ex) {\n                console.error(\"Error drawing visualization: \");\n                console.log(ex);\n            }\n        }).observes(\"configurationArray.@each\").on(\"didInsertElement\"),\n        redraw: (function () {}).observes(\"visualization\"),\n        resize: (function () {\n            //get the controller\n            var self = this;\n\n            //run asynchronous code to ensure that DOM has been changed before rerendering\n            //time window = 500 ms\n            Ember['default'].run.later(function () {\n                self.rerender();\n            }, 500);\n        }).observes(\"isToggled\")\n    });\n\n    //this.rerender();\n\n});","define('linda-vis-fe/views/properties-list', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        templateName: \"properties-list\",\n        tagName: \"ul\",\n        classNames: [\"properties-list\"]\n    });\n\n});","define('linda-vis-fe/views/slide-show', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        slides: null,\n        templateName: 'slideShow',\n        classNames: ['slider'],\n        didInsertElement: function didInsertElement() {\n            this._super();\n\n            console.log('Inserted slideshow: ');\n            console.dir(this.get('slides'));\n\n            this.$().slick({\n                infinite: true,\n                slidesToShow: 3,\n                slidesToScroll: 1\n            });\n        },\n        refreshView: (function () {\n            this.rerender();\n        }).observes('slides.[]')\n    });\n\n});","define('linda-vis-fe/views/visualization-options', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ContainerView.extend({\n        options: null, // structure or layout options\n        config: null, // visualization configuration\n        tagName: \"ul\",\n        children: (function () {\n            this.clear();\n\n            var options = this.get(\"options\");\n            var configArray = this.get(\"config\");\n\n            if (configArray === null || options === null) {\n                return;\n            }\n\n            console.log(\"VISUALIZATION OPTIONS VIEW - CREATING CONFIGURATION VIEWS ...\");\n\n            // Ensures that config changes are only propagated when endPropertyChanges is called, i.e. after the for loop\n            configArray.beginPropertyChanges();\n\n            try {\n                var optionNames = Object.getOwnPropertyNames(options);\n                for (var i = 0; i < optionNames.length; i++) {\n\n                    var optionName = optionNames[i];\n                    var optionTemplate = options[optionName];\n\n                    var view = Ember['default'].View.extend({\n                        tagName: \"li\",\n                        templateName: optionTemplate.template,\n                        name: optionName,\n                        label: optionTemplate.label,\n                        content: optionTemplate.value,\n                        metadata: optionTemplate.metadata ? optionTemplate.metadata.types : \"\",\n                        maxCardinality: optionTemplate.maxCardinality,\n                        contentObserver: (function () {\n                            var content = this.get(\"content\");\n                            var name = this.get(\"name\");\n                            var configMap = configArray[0];\n                            configMap[name] = content;\n                            configArray.setObjects([configMap]);\n                            optionTemplate.value = content;\n                        }).observes(\"content.@each\").on(\"init\")\n                    }).create();\n\n                    this.pushObject(view);\n                }\n            } finally {\n                console.log(\"VISUALIZATION OPTIONS VIEW - CREATED CONFIGURATION ARRAY\");\n                console.dir(configArray);\n\n                // Inside finally block to make sure that this is executed even if the for loop crashes\n                configArray.endPropertyChanges();\n            }\n        }).observes(\"options\").on(\"init\")\n    });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('linda-vis-fe/config/environment', ['ember'], function(Ember) {\n  var prefix = 'linda-vis-fe';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"linda-vis-fe/tests/test-helper\");\n} else {\n  require(\"linda-vis-fe/app\")[\"default\"].create({\"name\":\"linda-vis-fe\",\"version\":\"0.0.0.137afeac\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACprjpRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxtnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtcrpnjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClrnQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzthjxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3DA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"linda-vis-fe.js"}