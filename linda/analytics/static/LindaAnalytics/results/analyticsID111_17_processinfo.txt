loaded_data <- read.csv('insertqueryid36');
library(ncf);
myvars <- names(loaded_data) %in% c('rowID','basens','uri'); 
loaded_data <- loaded_data[!myvars] 
loaded_data <- na.omit(loaded_data);
column_number<-ncol(loaded_data);
column_to_predict <-colnames(loaded_data[column_number]);
rows_number<-nrow(loaded_data);
valuesToClean<-loaded_data[column_to_predict];
valuesToCleanNum<-rows_number;
trimmedValues<- data.frame();
for(i in 1:valuesToCleanNum){ valueToTrim <- as.character(valuesToClean[i,1]);  if(grepl("#", valueToTrim)) {  position<-which(strsplit(valueToTrim, "")[[1]]=="^");  trimmedValues[i,1]<-substr(valueToTrim, 1, position[1]-1); }else{ trimmedValues[i,1]<-valueToTrim;}  }
loaded_data[[column_to_predict]] <- trimmedValues;
loaded_data$value<-as.numeric(unlist(loaded_data$value));
 var<-as.vector(loaded_data$value);
fit1 <-correlog(loaded_data$x, loaded_data$y, var, w = NULL, increment=2, resamp = 50, latlon = TRUE, na.rm = FALSE, quiet = FALSE);
png(file='/var/www/html/LindaAnalytics/plots/plotid385.png',width=600);
print(plot(fit1));
 dev.off();
x.df <- data.frame(fit1$correlation);
x.sub <- subset(x.df, fit1$correlation > 0.4);
 sub<-nrow(x.sub);
 total_rows<-nrow(x.df);
 correlation_percent<-(sub/total_rows*100);
