loaded_data <- read.csv(file='/root/Desktop/vocabularyrepo/linda/', header=TRUE, sep=',');
library(forecast)
library(sp)
library(gstat)
myvars <- names(loaded_data) %in% c('rowID')
loaded_data <- loaded_data[!myvars]
column_number<-ncol(loaded_data);
rows_number<-nrow(loaded_data);
column_to_predict <-colnames(loaded_data[column_number]);
data_matrix<-as.matrix(loaded_data);
firstdate<-as.Date('2003-01-01');
lastdate <- as.Date('2005-12-01');
year_to_start <-as.numeric(format(firstdate, format='%Y'));
month_to_start <-as.numeric(format(firstdate, format='%m'));
day_to_start <-as.numeric(format(firstdate, format='%d'));
valuesToClean<-loaded_data[column_to_predict];
valuesToCleanNum<-rows_number;
trimmedValues<- data.frame();
for(i in 1:valuesToCleanNum){ valueToTrim <- as.character(valuesToClean[i,1]);  if(grepl("#", valueToTrim)) {  position<-which(strsplit(valueToTrim, "")[[1]]=="^"); trimmedValues[i,1]<-substr(valueToTrim, 1, position[1]-1);  }else{ trimmedValues[i,1]<-valueToTrim; }  }
datats <- ts(trimmedValues, frequency=12, start=c(year_to_start,month_to_start));
add.months= function(date,n) seq(date, by = paste (n, 'months'), length = 2)[2];
date_to_start_prediction=as.Date(lastdate) ;
date_to_start_prediction<-add.months(date_to_start_prediction, 1);
Date = seq(date_to_start_prediction, by='months', length=12);
m.ar2 <- auto.arima(datats);
png(file='/var/www/html/LindaAnalytics/plots/plotid262.png',width=600);a<-plot(forecast(m.ar2,h=12)); print(a); dev.off();
arimaplottosave<-plot(forecast(m.ar2,h=12));
png(file='/var/www/html/LindaAnalytics/plots/plotid262.png',width=600);
print(arimaplottosave);
dev.off();
p <- predict(m.ar2, n.ahead = 12);
rounded_values <-as.numeric(round(p$pred, digits = 3));
df_to_export <- data.frame(Date,rounded_values);
result_column_number<-ncol(df_to_export);
colnames(df_to_export)[result_column_number] <- column_to_predict;
