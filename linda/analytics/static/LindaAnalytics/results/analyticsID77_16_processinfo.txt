loaded_data_train <- read.csv('insertqueryid36');
loaded_data_eval <- read.csv('insertqueryid43')
df_to_export<- read.csv('insertqueryid43');
#remove any duplicated coordinates
loaded_data_train <- subset(loaded_data_train, !duplicated(loaded_data_train[4:5]));
loaded_data_eval <- subset(loaded_data_eval, !duplicated(loaded_data_eval[4:5]));
df_to_export <- subset(df_to_export, !duplicated(df_to_export[4:5]));
library(sp)
library(gstat)
column_number<-ncol(loaded_data_train);
column_to_predict <-colnames(loaded_data_train[column_number]);
rows_number<-nrow(loaded_data_train);
valuesToClean<-loaded_data_train[column_to_predict];
valuesToCleanNum<-rows_number;
trimmedValues<- data.frame();
for(i in 1:valuesToCleanNum){ valueToTrim <- as.character(valuesToClean[i,1]);  if(grepl("#", valueToTrim)) {  position<-which(strsplit(valueToTrim, "")[[1]]=="^");  trimmedValues[i,1]<-substr(valueToTrim, 1, position[1]-1); }else{ trimmedValues[i,1]<-valueToTrim;}  }
result_column_number<-ncol(loaded_data_train);
colnames(trimmedValues)[1]<- column_to_predict;
trimmedValues$value<-as.numeric(trimmedValues$value);
loaded_data_train[[column_to_predict]] <- trimmedValues;
loaded_data_train$value<-as.numeric(unlist(loaded_data_train$value));
 loaded_data_train<-data.frame(loaded_data_train);
loaded_data_eval<-data.frame(loaded_data_eval);
coordinates(loaded_data_train) = ~x+y
v <- variogram(log(value)~1, loaded_data_train)
m <- fit.variogram(v, vgm(1, 'Sph', 300, 1))
coordinates(loaded_data_eval) = ~x+y
df <- krige(formula = value~1, loaded_data_train, loaded_data_eval, model = m, nmax = 15, beta = 5.9, nsim = 1)
df_to_export[[column_to_predict]] <- df$sim1 
